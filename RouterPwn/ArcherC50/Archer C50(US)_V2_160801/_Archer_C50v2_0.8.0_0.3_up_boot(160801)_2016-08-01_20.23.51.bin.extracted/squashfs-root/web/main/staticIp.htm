<script language="javascript" type="text/javascript">
function initEditStaticIP() {
    var wan_iplist = $.wd.conn[$.wd.editIndex].obj;
    $("#ip_address").val(wan_iplist.externalIPAddress);
    $("#netmask").val(wan_iplist.subnetMask);
    $("#ip_gateway").val(wan_iplist.defaultGateway ? wan_iplist.defaultGateway : "0.0.0.0");
    $("#mtu").val(wan_iplist.maxMTUSize);

    if (wan_iplist.NATEnabled == 1) {
        $("#enable_nat").prop("checked", true);
        $("#enable_fullnat").prop("checked", (wan_iplist.X_TP_FullconeNATEnabled == 1) ? 1 : 0);
    } else if (wan_iplist.NATEnabled == 0) {
        $("#enable_nat").prop("checked", false);
        $("#enable_fullnat").prop("disabled", true);
        $("#enable_fullnat").prop("checked", false);
    }
    $("#enable_spi").prop("checked", (wan_iplist.X_TP_FirewallEnabled == 1) ? 1 : 0);
    $("#ip_igmp_en").prop("checked", (wan_iplist.X_TP_IGMPProxyEnabled == 1) ? 1 : 0);
    if (wan_iplist.DNSOverrideAllowed == 1) {
        $("#dns_address").val((wan_iplist.DNSServers).split(",")[0] ? (wan_iplist.DNSServers).split(",")[0] : "0.0.0.0");
        $("#second_dns").val((wan_iplist.DNSServers).split(",")[1] ? (wan_iplist.DNSServers).split(",")[1] : "0.0.0.0");
    }

    if (INCLUDE_IPV6) {
        $("#ip_enable_v4").prop("checked", (wan_iplist.X_TP_IPv4Enabled == 1) ? 1 : 0);
        enableStaIPv4((wan_iplist.X_TP_IPv4Enabled == 1) ? 1 : 0);

        $("#ip_enable_v6").prop("checked", (wan_iplist.X_TP_IPv6Enabled == 1) ? 1 : 0);
        enableStaIPv6((wan_iplist.X_TP_IPv6Enabled == 1) ? 1 : 0);

        $("#ip6_address").val(wan_iplist.X_TP_ExternalIPv6Address);
        $("#ip6_plen").val(wan_iplist.X_TP_PrefixLength);
        $("#ip6_gateway").val(wan_iplist.X_TP_DefaultIPv6Gateway ? wan_iplist.X_TP_DefaultIPv6Gateway : "::");
        if (wan_iplist.X_TP_DefaultIPv6GatewayOverride == 0) {
            $("#ip6_gateway").val("::");
        }

        if (INCLUDE_IPV6_MLD) {
            $("#ip_mld_en").prop("checked", (wan_iplist.X_TP_MLDProxyEnabled == 1) ? 1 : 0);
        }

        if (wan_iplist.X_TP_IPv6DNSOverrideAllowed == 1) {
            $("#dns6_address").val((wan_iplist.X_TP_IPv6DNSServers).split(",")[0] ? (wan_iplist.X_TP_IPv6DNSServers).split(",")[0] : "::");
            $("#second_dns6").val((wan_iplist.X_TP_IPv6DNSServers).split(",")[1] ? (wan_iplist.X_TP_IPv6DNSServers).split(",")[1] : "::");
        }
    }
}

function showIPoE() {
    if (INCLUDE_IPV6) {
        showIPv6();
        $("#ip_enable_v4").prop("checked", true);
        $("#ip_enable_v6").prop("checked", false);
    }

    $("#ip_elem_basic").removeClass("nd");
    $("#ipoeClick").removeClass("nd");
    $("#ipoeClick").removeClass("cln");
    $("#ip_elem_adv").addClass("nd");
}

function enableStaIPv4(flag) {
    if (flag) {
        $("#ip_basic_v4").removeClass("nd");
        $("#ip_adv_v4").removeClass("nd");
    } else {
        $("#ip_basic_v4").addClass("nd");
        $("#ip_adv_v4").addClass("nd");
    }
}

$("#ip_enable_v4").click(function() {
    var flag = $("#ip_enable_v4").prop("data-checked");
    enableStaIPv4(flag);
});

function enableStaIPv6(flag) {
    if (flag) {
        $("#ip_basic_v6").removeClass("nd");
        $("#ip_adv_v6").removeClass("nd");
    } else {
        $("#ip_basic_v6").addClass("nd");
        $("#ip_adv_v6").addClass("nd");
    }

    if (INCLUDE_IPV6_MLD && flag)
        $("#ip_mld").removeClass("nd");
    else
        $("#ip_mld").addClass("nd");
}

$("#ip_enable_v6").click(function() {
    var flag = $("#ip_enable_v6").prop("data-checked");
    enableStaIPv6(flag);
});

function initStaticIp() {
    showIPoE();

    if ($.wd.conn[$.wd.editIndex].type == "staticIp") {
        initEditStaticIP();
    }
    dftGtw = $("#defaut_gateway_staip");
    if (INCLUDE_IPV6) {
        dftGtw6 = $("#default_gateway_staip6");
    }
    initDefaultGwDNS();
    $("#divMacClone").removeClass("nd");
}

function stcNatClick() {
    if ($("#enable_nat").prop("data-checked")) {
        $("#enable_fullnat").prop("disabled", false);
    } else {
        $("#enable_fullnat").prop("checked", false);
        $("#enable_fullnat").prop("disabled", true);
        $("#enable_spi").prop("checked", false);
    }
    $("#enable_fullnat").data("tpCheckbox").refresh();
    $("#enable_spi").data("tpCheckbox").refresh();
}

function IPClick(obj) {
    if ($(obj).hasClass("cln")) {
        $("#ip_elem_adv").addClass("nd");
        $(obj).removeClass("cln");
    } else {
        $("#ip_elem_adv").removeClass("nd");
        $(obj).addClass("cln");
    }

    if (INCLUDE_IPV6_MLD && $("#ip_enable_v6").prop("data-checked") == true)
        $("#ip_mld").removeClass("nd");
    else
        $("#ip_mld").addClass("nd");    
}

function addStaIpAttrs() {
    var element;
    var temp_ip = $("#ip_address").val();
    var temp_mask = $("#netmask").val();
    var temp_gateway = $("#ip_gateway").val();
    if (!INCLUDE_IPV6 || $("#ip_enable_v4").prop("data-checked")) {
        if ($.ifip(temp_ip)) {
            $("#ip_address").focus().select();
            return false;
        }
        if ($.mask(temp_mask)) {
            $("#netmask").focus().select();
            return false;
        }
        if ($.ipmask(temp_ip, temp_mask)) {
            $("#ip_address").focus().select();
            return false;
        }
    }
    wanArg.externalIPAddress = $.ip2ip(temp_ip);
    wanArg.subnetMask = $.ip2ip(temp_mask);
    if (!INCLUDE_IPV6 || $("#ip_enable_v4").prop("data-checked")) {
        if ((temp_gateway != "") && (temp_gateway != "0.0.0.0") && ($.ifip(temp_gateway, true))) {
            $.alert(ERR_IP_FORMAT);
            $("#ip_gateway").focus().select();
            return false;
        }
        if ((temp_gateway != "") && (temp_gateway != "0.0.0.0") && (!$.isSameLan(temp_gateway, temp_mask, temp_ip, temp_mask))) {
            $.alert(ERR_GATEWAY_INVAD);
            $("#ip_gateway").focus().select();
            return false;
        }
    }
    wanArg.defaultGateway = (temp_gateway) ? $.ip2ip(temp_gateway) : "0.0.0.0";

    wanArg.NATEnabled = $("#enable_nat").prop("data-checked") ? 1 : 0;
    wanArg.X_TP_FullconeNATEnabled = $("#enable_fullnat").prop("data-checked") ? 1 : 0;
    wanArg.X_TP_FirewallEnabled = $("#enable_spi").prop("data-checked") ? 1 : 0;
    wanArg.X_TP_IGMPProxyEnabled = $("#ip_igmp_en").prop("data-checked") ? 1 : 0;

    if (($("#mtu").val() >= 576) && ($("#mtu").val() <= 1500)) {
        wanArg.maxMTUSize = parseInt($("#mtu").val(), 10);
    } else {
        $.alert(ERR_WAN_MTU_INVAD);
        $("#mtu").focus().select();
        return false;
    }
    var temp_dnsaddr = $("#dns_address").val();
    var temp_secdnsaddr = $("#second_dns").val();
    var temp_dnsServers = "";
    if (!INCLUDE_IPV6 || $("#ip_enable_v4").prop("data-checked")) {
        if ((temp_dnsaddr != "") && (temp_dnsaddr != "0.0.0.0") && ($.ifip(temp_dnsaddr, true))) {
            $.alert(ERR_WAN_DNSADDR_INVAD);
            $("#dns_address").focus().select();
            return false;
        }
        if ((temp_secdnsaddr != "") && (temp_secdnsaddr != "0.0.0.0") && ($.ifip(temp_secdnsaddr, true))) {
            $.alert(ERR_WAN_SECDNS_INVAD);
            $("#second_dns").focus().select();
            return false;
        }
    }
    temp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : "0.0.0.0";
    temp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : "0.0.0.0";
    temp_dnsServers = temp_dnsaddr + "," + temp_secdnsaddr;
    wanArg.DNSOverrideAllowed = ((temp_dnsServers == "0.0.0.0,0.0.0.0") ? 0 : 1);
    wanArg.DNSServers = temp_dnsServers;
    wanArg.enable = 1;
    wanArg.connectionType = "IP_Routed";
    wanArg.addressingType = "Static";

    if ($.wd.conn[$.wd.editIndex].type == "staticIp") {
        $.wd.l3ForwardingObj.__ifAliasName = dftGtw.data("text");
    }

    if (INCLUDE_IPV6) {
        wanArg.X_TP_IPv4Enabled = $("#ip_enable_v4").prop("data-checked") ? 1 : 0;
        wanArg.X_TP_IPv6Enabled = $("#ip_enable_v6").prop("data-checked") ? 1 : 0;

        if (wanArg.X_TP_IPv4Enabled == 0 && wanArg.X_TP_IPv6Enabled == 0) {
            $.alert(ERR_WAN6_IP_STACK_NONE);
            return false;
        }

        var temp_ip6 = $("#ip6_address").val();
        var temp_plen = $("#ip6_plen").val();
        var temp_gateway = $("#ip6_gateway").val();

        if (wanArg.X_TP_IPv6Enabled == 1) {
            if (!$.isValidGLUIP6AddrStrict(temp_ip6)) {
                $.alert(ERR_WAN6_ADDR_INVAD);
                $("#ip6_address").focus().select();
                return false;
            }

            if (temp_plen < 0 || temp_plen > 128) {
                $.alert(ERR_WAN6_PFXLEN_INVAD);
                $("#ip6_plen").focus().select();
                return false;
            }

            if (temp_gateway != "" && temp_gateway != "::" && !$.isValidGLUIP6AddrStrict(temp_gateway)) {
                $.alert(ERR_WAN6_ADDR_INVAD);
                $("#ip6_gateway").focus().select();
                return false;
            }
        }

        wanArg.X_TP_ExternalIPv6Address = temp_ip6;
        wanArg.X_TP_PrefixLength = temp_plen;
        wanArg.X_TP_DefaultIPv6Gateway = (temp_gateway) ? temp_gateway : "::";
        wanArg.X_TP_DefaultIPv6GatewayOverride = (wanArg.X_TP_DefaultIPv6Gateway != "::") ? 1 : 0;

        if (INCLUDE_IPV6_MLD) {
            wanArg.X_TP_MLDProxyEnabled = $("#ip_mld_en").prop("data-checked") ? 1 : 0;
        }

        var temp_dnsaddr = $("#dns6_address").val();
        var temp_secdnsaddr = $("#second_dns6").val();
        var temp_DNSServers = "";

        if (wanArg.X_TP_IPv6Enabled == 1) {
            if (temp_dnsaddr != "" && temp_dnsaddr != "::" && !$.isValidGLUIP6AddrStrict(temp_dnsaddr)) {
                $.alert(ERR_WAN6_ADDR_INVAD);
                $("#dns6_address").focus().select();
                return false;
            }

            if (temp_secdnsaddr != "" && temp_secdnsaddr != "::" && !$.isValidGLUIP6AddrStrict(temp_secdnsaddr)) {
                $.alert(ERR_WAN6_ADDR_INVAD);
                $("#second_dns6").focus().select();
                return false;
            }
        }

        temp_dnsaddr = (temp_dnsaddr) ? temp_dnsaddr : "::";
        temp_secdnsaddr = (temp_secdnsaddr) ? temp_secdnsaddr : "::";
        temp_DNSServers = temp_dnsaddr + "," + temp_secdnsaddr;
        wanArg.X_TP_IPv6DNSOverrideAllowed = ((temp_DNSServers == "::,::") ? 0 : 1);
        wanArg.X_TP_IPv6DNSServers = temp_DNSServers;

        if ($.wd.conn[$.wd.editIndex].type == "staticIp") {
            $.wd.l3Ip6ForwardingObj.__ifAliasName = dftGtw6.data("text");
        }
    }

    return true;
}
</script>

<div id="ip_elem_basic" class="nd">
    <div class="IPv6 nd"><b>IPv4:</b>
        <input type="checkbox" id="ip_enable_v4" checked="checked" />
        <label class="T_enable"></label>
    </div>
    <div id="ip_basic_v4">
        <div><b class="T_ipaddr">IP Address:</b>
            <input type="text" id="ip_address" value="0.0.0.0" maxlength="15" />
        </div>
        <div><b class="T_netmask">Subnet Mask:</b>
            <input type="text" id="netmask" value="0.0.0.0" maxlength="15" />
        </div>
        <div><b class="T_gateway">Gateway:</b>
            <input type="text" id="ip_gateway" value="0.0.0.0" maxlength="15" />
            <span class="T T_optional">(optional)</span>
        </div>
        <div><b class="T_dns">DNS Server:</b>
            <input type="text" id="dns_address" value="0.0.0.0" maxlength="15" />
            <span class="T_optional">(optional)</span>
        </div>
        <div><b class="T_secdns">Secondary DNS server:</b>
            <input type="text" id="second_dns" value="0.0.0.0" maxlength="15" />
            <span class="T_optional">(optional)</span>
        </div>
        <b class="T_defgw">Default Gateway:</b>
        <select id="defaut_gateway_staip" class="l"></select>
    </div>
    <div class="IPv6 nd"><b>IPv6:</b>
        <input type="checkbox" id="ip_enable_v6" />
        <label class="T_enable">&nbsp;</label>
    </div>
    <div id="ip_basic_v6" class="nd">
        <div class="IPv6 nd"><b class="T_ip6addr">IPv6 Address:</b>
            <input type="text" id="ip6_address" value="::" maxlength="40" />
        </div>
        <div class="IPv6 nd"><b class="T_plen">Prefix Length:</b>
            <input type="text" id="ip6_plen" value="64" maxlength="15" />
        </div>
        <div class="IPv6 nd"><b class="T_ip6gw">IPv6 Gateway:</b>
            <input type="text" id="ip6_gateway" value="::" maxlength="40" />
            <span class="T_optional">(Optional)</span>
        </div>
        <div class="IPv6 nd"><b class="T_ip6dns">IPv6 DNS Server:</b>
            <input type="text" id="dns6_address" value="::" maxlength="40" />
            <span class="T_optional">(Optional)</span>
        </div>
        <div class="IPv6 nd"><b class="T_ip6secdns">Secondary IPv6 DNS Server:</b>
            <input type="text" id="second_dns6" value="::" maxlength="40" />
            <span class="T_optional">(Optional)</span>
        </div>

        <p class="IPv6 nd"><b class="T_ip6defgw">IPv6 Default Gateway:</b>
            <select id="default_gateway_staip6" class="l"></select>
        </p>
    </div>

</div>

<div class="advanced-block">
    <span class="advanced-icon advanced-hide-icon" id="ipoeClick" onclick="IPClick(this)"></span>
    <span class="T_adv">Advanced</span>
</div>

<div id="ip_elem_adv" class="nd">
    <div><b class="T_mtuSize">MTU Size:</b>
        <input type="text" id="mtu" size="5" maxlength="4" value="1500" />
        <span class="T_bytes">bytes.</span>(<span class="T_mtu1500">The default is 1500</span>,
        <span class="T_nochg">do not change unless necessary.</span>)</div>
    <div id="ip_adv_v4">
        <div><b class="T_ennat">Enable NAT</b>
            <input type="checkbox" id="enable_nat" checked="checked" onclick="stcNatClick();" />
            <label class="T_enable">&nbsp;</label>
        </div>
        <div><b class="T_enfullcone">Enable Fullcone NAT</b>
            <input type="checkbox" id="enable_fullnat" />
            <label class="T_enable">&nbsp;</label>
        </div>
        <div><b class="T_enspi">Enable SPI Firewall</b>
            <input type="checkbox" id="enable_spi" checked="true" />
            <label class="T_enable">&nbsp;</label>
        </div>
        <div><b class="T_enigmp">Enable IGMP Proxy</b>
            <input type="checkbox" id="ip_igmp_en" checked="true" />
            <label class="T_enable">&nbsp;</label>
        </div>
    </div>
    <div id="ip_adv_v6">
        <div id="ip_mld" class="IPv6 nd">
            <b class="T_enmld">Enable MLD Proxy</b>
            <input type="checkbox" id="ip_mld_en" checked="true" />
            <label class="T_enable">&nbsp;</label>
        </div>
    </div>
</div>

<script language="JavaScript" type="text/javascript">
$.tpInit(initStaticIp);
</script>
