<script language="javascript" type="text/javascript">
var lan6Cfg;
var pfxCfgType;
var pdWanConn;
var wanIpList;
var wanPppList;
var lan6Arg = {};

function initWan() {
    if (hasGroup) {
        $("#ipv6NoGroupBtn").addClass("nd");
    } else {
        $("#ipv6HasGroupBtn").addClass("nd");
    }
    var index = 0;

    wanIpList = $.act(ACT_GL, WAN_IP_CONN, null, null, ["enable", "name", "X_TP_IPv6Enabled", "X_TP_PDEnabled"]);
    wanPppList = $.act(ACT_GL, WAN_PPP_CONN, null, null, ["enable", "name", "X_TP_IPv6Enabled", "X_TP_PDEnabled"]);
    var sel = $("#pd_wan_conn");
    if (!$.exe()) {
        for (var i = 0; i < wanIpList.length; i++) {
            if (wanIpList[i].enable == 1 && wanIpList[i].X_TP_IPv6Enabled == 1) {

                var option = "<option value=" + wanIpList[i].__stack + ">" + wanIpList[i].name + "</option>";

                try {
                    sel.append(option, null);
                } catch (e) {
                    sel.append(option);
                }

                index++;

                if (lan6Cfg.IPv6SitePrefixConfigType == "Delegated") {
                    if (wanIpList[i].name == lan6Cfg.IPv6PDWANConnection) {
                        sel.selectedIndex = index - 1;
                    }
                }
            }
        }

        for (var i = 0; i < wanPppList.length; i++) {
            if (wanPppList[i].enable == 1 && wanPppList[i].X_TP_IPv6Enabled == 1) {
                var option = "<option value=" + wanPppList[i].__stack + ">" + wanPppList[i].name + "</option>";

                try {
                    sel.append(option, null);
                } catch (e) {
                    sel.append(option);
                }
                index++;
                if (lan6Cfg.IPv6SitePrefixConfigType == "Delegated") {
                    if (wanPppList[i].name == lan6Cfg.IPv6PDWANConnection) {
                        sel.selectedIndex = index - 1;
                    }
                }
            }
        }

        if (index == 0) {

            var option = "<option value='0'>" + s_str.noAvaiIntf + "</option>";

            try {
                sel.append(option, null);
            } catch (e) {
                append.add(option);
            }
        }
    }
}

function getWanValue() {
    var needProcess = 0;
    if (lan6Arg.IPv6SitePrefixConfigType == "Delegated") {
        pdWanConn = $("select#pd_wan_conn").data("text");

        if (!pdWanConn || pdWanConn == s_str.noAvaiIntf) {
            $.alert(ERR_IP6_WAN_CONN_NONE);
            return false;
        }
        if (pdWanConn != lan6Cfg.IPv6PDWANConnection) {
            needProcess = 1;
        }
    }

    for (var i = 0; i < wanIpList.length; i++) {
        if (needProcess == 1) {
            if ((lan6Cfg.IPv6PDWANConnection != "" && wanIpList[i].name == lan6Cfg.IPv6PDWANConnection) || ((lan6Cfg.IPv6PDWANConnection == "") && (wanIpList[i].X_TP_PDEnabled == 1))) {
                $.act(ACT_SET, WAN_IP_CONN, wanIpList[i].__stack, null, ["X_TP_PDEnabled=0"]);
                if ($.exe()) {
                    return false;
                }
            }
        }

        if ((wanIpList[i].name == pdWanConn)) {
            if (lan6Arg.IPv6SitePrefixConfigType == "Delegated") {
                $.act(ACT_SET, WAN_IP_CONN, wanIpList[i].__stack, null, ["X_TP_PDEnabled=1"]);
            } else {
                $.act(ACT_SET, WAN_IP_CONN, wanIpList[i].__stack, null, ["X_TP_PDEnabled=0"]);
            }
        }

        if ($.exe()) {
            return false;
        }
    }

    for (var i = 0; i < wanPppList.length; i++) {
        if (needProcess == 1) {
            if ((lan6Cfg.IPv6PDWANConnection != "" && wanPppList[i].name == lan6Cfg.IPv6PDWANConnection) || ((lan6Cfg.IPv6PDWANConnection == "") && (wanPppList[i].X_TP_PDEnabled == 1))) {
                $.act(ACT_SET, WAN_PPP_CONN, wanPppList[i].__stack, null, ["X_TP_PDEnabled=0"]);
                if ($.exe()) {
                    return false;
                }
            }
        }

        if ((wanPppList[i].name == pdWanConn)) {
            if (lan6Arg.IPv6SitePrefixConfigType == "Delegated") {
                $.act(ACT_SET, WAN_PPP_CONN, wanPppList[i].__stack, null, ["X_TP_PDEnabled=1"]);
            } else {
                $.act(ACT_SET, WAN_PPP_CONN, wanPppList[i].__stack, null, ["X_TP_PDEnabled=0"]);
            }
        }

        if ($.exe()) {
            return false;
        }
    }

    return true;
}

function checkPrefix(idp, idplen) {
    if (idp.length == 0) {
        $.alert(ERR_LAN6_PREFIX_EMPTY);
        return false;
    }
    if (idplen.length == 0) {
        $.alert(ERR_LAN6_PREFIX_LEN_EMPTY);
        return false;
    } else {
        if (idplen != 64) {
            $.alert(ERR_LAN6_PREFIX_LEN_INVALID);
            return false;
        }
    }

    if (!isValidIP6Prefix(idp, idplen)) {
        $.alert(ERR_LAN6_PREFIX_INVALID);
        return false;
    }
    return true;
}

function checkDhcp6sParam() {
    var regExp = /^([a-f]|[A-F]|[0-9]){1,4}$/;
    var regExp1 = /^[0-9]{1,6}$/;

    var ids = $("#min_intf_id").val();
    var ide = $("#max_intf_id").val();
    var idl = $("#ls_time").val();

    if (ids.length == 0) {
        $.alert(ERR_LAN6_DHCP6S_START_ID_EMPTY);
        return false;
    }

    if (ide.length == 0) {
        $.alert(ERR_LAN6_DHCP6S_END_ID_EMPTY);
        return false;
    }

    if (idl.length == 0) {
        $.alert(ERR_LAN6_LEASE_TIME_EMPTY);
        return false;
    }

    if ((0 != idl.length) && (!regExp1.test(idl))) {
        $.alert(ERR_LAN6_LEASE_TIME_INVALID);
        return false;
    }

    if ((0 != ids.length) && (!regExp.test(ids))) {

        $.alert(ERR_LAN6_DHCP6S_START_ID_INVALID);
        return false;
    }

    if ((0 != ide.length) && (!regExp.test(ide))) {
        $.alert(ERR_LAN6_DHCP6S_END_ID_INVALID);
        return false;
    }

    if (parseInt(ids, 16) > parseInt(ide, 16)) {

        $.alert(ERR_LAN6_DHCP6S_ADDR_CONFLICT);
        return false;
    }

    return true;
}

function isValidIP6Prefix(ip6Prefix, prefixLen) {
    var len = 0;
    var flag;
    var temStr = "";
    var num = 0;

    if (prefixLen < 0 || prefixLen > 128) {
        flag = false;
    } else {
        flag = true;
    }

    regExp = /::/;
    if (flag) {
        if (regExp.test(ip6Prefix)) {
            regExp = /^([a-f]|[A-F]|[0-9])*(::)([a-f]|[A-F]|[0-9])*(::)([a-f]|[A-F]|[0-9])*$/;
            if (regExp.test(ip6Prefix)) {
                flag = false;
            } else {
                var index = ip6Prefix.indexOf("::");
                var len = ip6Prefix.length;
                var substr1 = ip6Prefix.substr(0, index);
                var substr2 = ip6Prefix.substr(index + 2, len - index - 2);
                regExp = /^(([a-f]|[A-F]|[0-9]){1,4}(:)){0,6}([a-f]|[A-F]|[0-9]){1,4}$/;
                var num = 0;


                if ("" == substr1 && "" == substr2) {
                    flag = false;
                } else if ("" == substr2) {
                    if (!regExp.test(substr1)) {
                        flag = false;
                    }
                } else if ("" == substr1) {

                    if (!regExp.test(substr2)) {
                        flag = false;
                    }
                } else if (!regExp.test(substr1) || !regExp.test(substr2)) {
                    flag = false;
                } else if (regExp.test(substr1) && regExp.test(substr2)) {
                    for (var i = 0; i < substr1.length; i++) {
                        if (substr1.charAt(i) == ":") {
                            num += 1;
                        }
                    }

                    for (var i = 0; i < substr2.length; i++) {
                        if (substr1.charAt(i) == ":") {
                            num += 1;
                        }
                    }

                    if (num > 5) {
                        flag = false;
                    }
                }
            }
        } else {
            regExp = /^(([a-f]|[A-F]|[0-9]){1,4}(:)){7}([a-f]|[A-F]|[0-9]){1,4}$/;
            if (!regExp.test(ip6Prefix)) {
                flag = false;
            }
        }
    }

    return flag;
}

function getSitePrefix(address) {
    var i = 0;
    var zeroNum = 0;
    var count = 0;
    var sitePrefix = "";

    var addrParts = address.split(":");

    if (-1 == address.indexOf("::")) {
        for (i = 0; i < 4; i++) {
            sitePrefix = sitePrefix.concat(addrParts[i]);
            if (i != 3) {
                sitePrefix = sitePrefix.concat(":");
            } else {
                sitePrefix = sitePrefix.concat("::");
            }
        }

        return sitePrefix;
    }

    zeroNum = 9 - addrParts.length;
    for (i = 0; i < addrParts.length; i++) {
        if (addrParts[i] != "") {
            sitePrefix = sitePrefix.concat(addrParts[i]);
            sitePrefix = sitePrefix.concat(":");
            count++;
        } else {
            if (i < 4) {
                for (; zeroNum > 0; zeroNum--) {
                    sitePrefix = sitePrefix.concat("0:");
                    count++;
                    if (4 == count) {
                        break;
                    }
                }
            }
        }

        if (4 == count) {
            break;
        }
    }

    sitePrefix = sitePrefix.concat(":");
    return sitePrefix;
}

function changePfxMode() {
    if ($("#pfx_static").prop("checked")) {
        $("#staticElemets").removeClass("nd");
        $("#delegatedElements").addClass("nd");
    } else {
        $("#staticElemets").addClass("nd");
        $("#delegatedElements").removeClass("nd");
    }
}

function changeAddrMode() {
    if ($("#dhcp6s_en").prop("checked")) {
        $("#dhcpv6ServerElements").removeClass("nd");
        $("#radvdElements").addClass("nd");
    } else {
        $("#dhcpv6ServerElements").addClass("nd");
        $("#radvdElements").removeClass("nd");
    }
}

function enableULA() {

    if ($("#ula_en").prop("data-checked")) {
        $("#ulaElements").removeClass("nd");
    } else {
        $("#ulaElements").addClass("nd");
    }
}

function refreshHTML() {
    var brList = $.act(ACT_GL, L2_BRIDGING_ENTRY, null, null, ["bridgeName"]);
    if (!$.exe()) {
        for (var index = 0; index < brList.length; index++) {
            if (brList[index].bridgeName == "Default") {
                lan6Cfg = $.act(ACT_GET, LAN_IP6_HOST_CFG, brList[index].__stack, null, null);
                if (!$.exe()) {

                    $("#start_pfx").html((lan6Cfg.IPv6SitePrefix) ? lan6Cfg.IPv6SitePrefix : "::");
                    $("#end_pfx").html((lan6Cfg.IPv6SitePrefix) ? lan6Cfg.IPv6SitePrefix : "::");
                }

                break;
            }
        }
    }
}

function init() {
    var brList = $.act(ACT_GL, L2_BRIDGING_ENTRY, null, null, ["bridgeName"]);
    if (!$.exe()) {
        for (var index = 0; index < brList.length; index++) {
            if (brList[index].bridgeName == "Default") {
                lan6Cfg = $.act(ACT_GET, LAN_IP6_HOST_CFG, brList[index].__stack, null, null);
                if (!$.exe()) {
                    $("#groupName").prop("value", brList[index].bridgeName);
                    $("#radvd_en").prop('checked', (lan6Cfg.RADVDEnable == 1) ? true : false);
                    $("#rdnss_en").prop('checked', (lan6Cfg.RDNSSEnable == 1) ? true : false);

                    $("#ula_en").prop('checked', (lan6Cfg.ULAEnable == 1) ? true : false);

                    if (lan6Cfg.ULAEnable == 1) {
                        $("#ulaElements").removeClass("nd");
                    } else {
                        $("#ulaElements").addClass("nd");
                    }

                    $("#dhcp6s_en").prop('checked', (lan6Cfg.DHCPv6ServerEnable == 1) ? true : false);

                    $("#pfx_delegated").prop('checked', (lan6Cfg.IPv6SitePrefixConfigType == "Delegated") ? true : false);
                    $("#pfx_static").prop('checked', (lan6Cfg.IPv6SitePrefixConfigType == "Static") ? true : false);

                    $("#ula_pfx").val((lan6Cfg.ULAPrefix) ? lan6Cfg.ULAPrefix : "");
                    $("#ula_plen").val((lan6Cfg.ULAPrefixLength) ? lan6Cfg.ULAPrefixLength : "");

                    $("#site_pfx").val((lan6Cfg.IPv6SitePrefix) ? lan6Cfg.IPv6SitePrefix : "");
                    $("#site_plen").val((lan6Cfg.IPv6SitePrefixLength) ? lan6Cfg.IPv6SitePrefixLength : "");

                    $("#start_pfx").html((lan6Cfg.IPv6SitePrefix) ? lan6Cfg.IPv6SitePrefix : "::");
                    $("#end_pfx").html((lan6Cfg.IPv6SitePrefix) ? lan6Cfg.IPv6SitePrefix : "::");

                    $("#min_intf_id").val((lan6Cfg.DHCPv6ServerEnable) ? lan6Cfg.DHCPv6MinInterfaceID : "1");
                    $("#max_intf_id").val((lan6Cfg.DHCPv6ServerEnable) ? lan6Cfg.DHCPv6MaxInterfaceID : "FFFE");

                    $("#ls_time").val((lan6Cfg.DHCPv6ServerEnable) ? lan6Cfg.DHCPv6LeaseTime : "86400");
                }

                initWan();

                break;
            }
        }

        // enableULA();
        changeAddrMode();
        changePfxMode();
    }
}

function doSave() {
    lan6Arg.IPv6SitePrefixConfigType = ($("#pfx_delegated").prop("checked")) ? "Delegated" : "Static";
    if (!getWanValue()) return;
    if (lan6Arg.IPv6SitePrefixConfigType == "Static") {
        if (!checkPrefix($("#site_pfx").val(), $("#site_plen").val())) return;

        lan6Arg.IPv6SitePrefix = getSitePrefix($("#site_pfx").val());
        lan6Arg.IPv6SitePrefixLength = $("#site_plen").val();

        lan6Arg.IPv6DNSServers = (lan6Cfg.IPv6DNSServers) ? lan6Cfg.IPv6DNSServers : "::";
    } else {
        lan6Arg.IPv6PDWANConnection = pdWanConn;
    }

    lan6Arg.RADVDEnable = ($("#radvd_en").prop("checked")) ? 1 : 0;

    lan6Arg.ULAEnable = ($("#ula_en").prop("data-checked")) ? 1 : 0;
    if (lan6Arg.ULAEnable == 1) {
        if (!checkPrefix($("#ula_pfx").val(), $("#ula_plen").val())) return;

        lan6Arg.ULAPrefix = $("#ula_pfx").val();
        lan6Arg.ULAPrefixLength = $("#ula_plen").val();
    }

    lan6Arg.RDNSSEnable = ($("#rdnss_en").prop("data-checked")) ? 1 : 0;

    lan6Arg.DHCPv6ServerEnable = ($("#dhcp6s_en").prop("checked")) ? 1 : 0;
    if (lan6Arg.DHCPv6ServerEnable == 1) {
        if (!checkDhcp6sParam()) return;

        lan6Arg.DHCPv6MinInterfaceID = $("#min_intf_id").val();
        lan6Arg.DHCPv6MaxInterfaceID = $("#max_intf_id").val();
        lan6Arg.DHCPv6LeaseTime = $("#ls_time").val();
    }


    $.act(ACT_SET, LAN_IP6_HOST_CFG, lan6Cfg.__stack, null, lan6Arg);
    $.exe(function(err) {
        if (!err) {
            $.removeLoading();
            refreshHTML();
        }
    });
}
</script>

<div class="content-container">
    <form class="pure-form pure-form-aligned">
        <div class="pure-control-group">
            <b class="xl T_group">Group:</b>
            <input type="text" readonly="true" id="groupName">
        </div>

        <div>
            <b id="t_addrtype" class="xl">Address Type:</b>
            <input type="radio" name="addrMode" id="radvd_en" />
            <label id="t_radvd">RADVD</label>
            <input type="radio" name="addrMode" id="dhcp6s_en" />
            <label id="t_dhcp6s">DHCP6 Server</label>
        </div>

        <div id="radvdElements" class="nd">
            <div>
                <b class="xl"></b>
                <input type="checkbox" id="rdnss_en" />
                <label id="t_rdnss">Enable RDNNS</label>
            </div>

            <div>
                <b class="xl"></b>
                <input type="checkbox" id="ula_en" />
                <label id="t_ula" >Enable ULA Prefix</label>
            </div>

            <div id="ulaElements" class="nd">
                <div>
                    <b id="t_ulapfx" class="xl">ULA Prefix:</b>
                    <input type="text" id="ula_pfx" required />
                </div>

                <div>
                    <b id="t_ulaplen" class="xl">ULA Prefix Length</b>
                    <input type="text" id="ula_plen" required />
                </div>
            </div>

        </div>

        <!-- DHCPv6Server Elements -->
        <div id="dhcpv6ServerElements" class="nd">
            <div>
                <b id="t_startaddr" class="xl">Start IPv6 Address:</b>
                <span id="start_pfx"></span>
                <input type="text" class="l" id="min_intf_id" required />
                <span>(1~FFFE)</span>
            </div>

            <div>
                <b id="t_endaddr" class="xl">End IPv6 Address:</b>
                <span id="end_pfx"></span>
                <input type="text" class="l" id="max_intf_id" required />
                <span>(1~FFFE)</span>
            </div>

            <div>
                <b id="t_lstime" class="xl">Leased Time:</b>
                <input type="text"  class="l" id="ls_time" required />
                <span id="t_lssec">seconds</span>
            </div>
        </div>


        <div>
            <b id="t_pfxtype" class="xl">Site Prefix Type:</b>
            <input type="radio" name="pfxMode" id="pfx_delegated" />
            <label id="t_delegated">Delegated</label>
            <input type="radio" name="pfxMode" id="pfx_static" />
            <label id="t_static">Static</label>
        </div>

        <!-- Delegated Elements -->
        <div id="delegatedElements" class="nd">
            <div>
                <b id="t_wan" class="xl">Prefix Delegated WAN Connection:</b>
                <select id="pd_wan_conn" class="xl">
                </select>
            </div>
        </div>

        <!-- Static Elements -->
        <div id="staticElemets" class="nd">
            <div>
                <b class="xl" id="t_pfx">Site Prefix:</b>
                <input type="text" id="site_pfx" required />
            </div>

            <div>
                <b class="xl" id="t_plen">Site Prefix Length</b>
                <input type="text" id="site_plen" required />
            </div>
        </div>

        <p class="br"></p>
        <div class="inline-btn-right" id="ipv6HasGroupBtn">
            <button type="submit" class="green inline T_cancel" id="cancelBtn">Cancel</button>
            <button type="submit" class="green inline T_ok" id="saveBtn">OK</button>
        </div>

        <div id="ipv6NoGroupBtn">
            <button type="submit" class="green T_save" id="saveBtnNg">Save</button>
        </div>
        <p class="br"></p>
    </form>
</div>

<script type="text/javascript">
$("#radvd_en").on('click', function(e) {

    changeAddrMode();
});

$("#dhcp6s_en").on('click', function(e) {
    changeAddrMode();
});

$("#ula_en").on('click', function(e) {
    enableULA();
});

$("#pfx_delegated").on('click', function(e) {
    changePfxMode();
});

$("#pfx_static").on('click', function(e) {
    changePfxMode();
});

$("#saveBtn").on('click', function(e) {
    $.addLoading($(this));
    doSave();
});

$("#cancelBtn").on('click', function(e) {
    $.reload();
});

$("#saveBtnNg").on('click', function(e) {
    $.addLoading($(this));
    doSave();
});

$.tpInit(init);
</script>
