<script language="javascript" type="text/javascript">
var deviceStack;
var fwState;
var aclMode;
var blackHostStk;
var blackRuleStk;
var whiteHostStk;
var whiteRuleStk;
var whiteMacList;
var fwList;
var isEdit;
var editStackIndex;
var bClientInWhite;
var clientName;

function init() {

    deviceStack = [];
    blackHostStk = [];
    blackRuleStk = [];
    whiteHostStk = [];
    whiteRuleStk = [];
    whiteMacList = [];
    isEdit = 0;
    bClientInWhite = true;

    var devicesOnlineHeadArray = [{
        "text": '<div><input type="checkbox" id="checkbox_devicesOnline"/><label></label></div>',
        "width": "5%"
    }, {
        "text": table_str.id,
        "width": "5%"
    }, {
        "text": table_str.devname,
        "width": "10%"
    }, {
        "text": table_str.ip,
        "width": "10%"
    }, {
        "text": table_str.mac,
        "width": "15%"
    }, {
        "text": table_str.conntype,
        "width": "10%"
    }];

    var devicesInBlackListHeadArray = [{
        "text": '<div><input type="checkbox" id="checkbox_devicesInBlackList"/><label></label></div>',
        "width": "5%"
    }, {
        "text": table_str.id,
        "width": "5%"
    }, {
        "text": table_str.devname,
        "width": "10%"
    }, {
        "text": table_str.mac,
        "width": "15%"
    }, {
        "text": table_str.modify,
        "width": "10%"
    }];

    var devicesInWhiteListHeadArray = [{
        "text": '<div><input type="checkbox" id="checkbox_devicesInWhiteList"/><label></label></div>',
        "width": "5%"
    }, {
        "text": table_str.id,
        "width": "5%"
    }, {
        "text": table_str.devname,
        "width": "10%"
    }, {
        "text": table_str.mac,
        "width": "15%"
    }, {
        "text": table_str.modify,
        "width": "10%"
    }];

    $.initTableHead($("#tableDevicesOnline"), devicesOnlineHeadArray);
    $("#tableDevicesOnline").tpTable(initDeviceOnlineTable);

    $.initTableHead($("#tableDevicesInBlackList"), devicesInBlackListHeadArray);
    $("#tableDevicesInBlackList").tpTable(initDeviceInBlackListTable);

    $.initTableHead($("#tableDevicesInWhiteList"), devicesInWhiteListHeadArray);
    $("#tableDevicesInWhiteList").tpTable(initDeviceInWhiteListTable);

    var fwCfg = $.act(ACT_GET, FIREWALL, null, null, ["enable", "firewallMode", "defaultAction"]);
    fwList = $.act(ACT_GL, RULE, null, null);

    if (!$.exe()) {
        if (fwCfg.enable == 1) {
            $("#ACLOn").addClass("selected");
            fwState = 1;
        } else if (fwCfg.enable == 0) {
            $("#ACLOff").addClass("selected");
            fwState = 0;
        }
        initRadioShow(fwCfg.firewallMode);
    }

    $("#checkbox_devicesOnline").click(function() {
        var td = $("#tableDevicesOnline").find("tbody tr td");
        if ($("#checkbox_devicesOnline").next("label").siblings('.checkbox-checkbox').prop('data-checked') === true) {
            td.find("input[type='checkbox']").each(function(index) {
                $(this).next("label").siblings('.checkbox-checkbox').prop('data-checked', true);
                $(this).next("label").find('.text').addClass("span-click");
                $(this).next("label").find('.icon').addClass("checkbox-click");
            });
        } else if ($("#checkbox_devicesOnline").next("label").siblings('.checkbox-checkbox').prop('data-checked') === false) {
            td.find("input[type='checkbox']").each(function(index) {
                $(this).next("label").siblings('.checkbox-checkbox').prop('data-checked', false);
                $(this).next("label").find('.text').removeClass("span-click");
                $(this).next("label").find('.icon').removeClass("checkbox-click");
            });
        }
    });

    $("#checkbox_devicesInBlackList").click(function() {
        var td = $("#tableDevicesInBlackList").find("tbody tr td");
        if ($("#checkbox_devicesInBlackList").next("label").siblings('.checkbox-checkbox').prop('data-checked') === true) {
            td.find("input[type='checkbox']").each(function(index) {
                $(this).next("label").siblings('.checkbox-checkbox').prop('data-checked', true);
                $(this).next("label").find('.text').addClass("span-click");
                $(this).next("label").find('.icon').addClass("checkbox-click");
            });
        } else if ($("#checkbox_devicesInBlackList").next("label").siblings('.checkbox-checkbox').prop('data-checked') === false) {
            td.find("input[type='checkbox']").each(function(index) {
                $(this).next("label").siblings('.checkbox-checkbox').prop('data-checked', false);
                $(this).next("label").find('.text').removeClass("span-click");
                $(this).next("label").find('.icon').removeClass("checkbox-click");
            });
        }
    });

    $("#checkbox_devicesInWhiteList").click(function() {
        var td = $("#tableDevicesInWhiteList").find("tbody tr td");
        if ($("#checkbox_devicesInWhiteList").next("label").siblings('.checkbox-checkbox').prop('data-checked') === true) {
            td.find("input[type='checkbox']").each(function(index) {
                $(this).next("label").siblings('.checkbox-checkbox').prop('data-checked', true);
                $(this).next("label").find('.text').addClass("span-click");
                $(this).next("label").find('.icon').addClass("checkbox-click");
            });
        } else if ($("#checkbox_devicesInWhiteList").next("label").siblings('.checkbox-checkbox').prop('data-checked') === false) {
            td.find("input[type='checkbox']").each(function(index) {
                $(this).next("label").siblings('.checkbox-checkbox').prop('data-checked', false);
                $(this).next("label").find('.text').removeClass("span-click");
                $(this).next("label").find('.icon').removeClass("checkbox-click");
            });
        }
    });

}

function initRadioShow(firewallMode) {

    if (firewallMode == 1) {
        $("#radioBlackList").prop("checked", "checked");
        $("#deviceInBlackList").removeClass("nd");
        $(".block-icon-wrap").show();
        aclMode = 1;
    } else if (firewallMode == 0) {
        $("#radioWhiteList").prop("checked", "checked");
        $("#deviceInWhiteList").removeClass("nd");
        $(".block-icon-wrap").hide();
        aclMode = 0;
    }
}

$("#ACLOn").click(function() {
    $.act(ACT_SET, FIREWALL, null, null, ["enable=1"]);
    $.exe(function(err) {
        if (!err) {
            fwState = 1;
        }
    })
});

$("#ACLOff").click(function() {
    $.act(ACT_SET, FIREWALL, null, null, ["enable=0"]);
    $.exe(function(err) {
        if (!err) {
            fwState = 0;
        }
    })
});

$("#saveListMode").on("click", function() {
    $.addLoading($(this));
    doSaveListMode();
});

function doSaveListMode() {
    if ($("#radioBlackList").prop("checked") == true) {
    $("#deviceInBlackList").removeClass("nd");
    $("#deviceInWhiteList").addClass("nd");
        $(".block-icon-wrap").show();
        aclMode = 1;
    $.act(ACT_SET, FIREWALL, null, null, ["firewallMode=1"]);
    $.exe(function(err) {
            $.removeLoading();
            if (!err) {
                $.reload();
            }
});
    } else if ($("#radioWhiteList").prop("checked") == true) {
    $("#deviceInWhiteList").removeClass("nd");
    $("#deviceInBlackList").addClass("nd");
        $(".block-icon-wrap").hide();
        aclMode = 0;
    $.act(ACT_SET, FIREWALL, null, null, ["firewallMode=0"]);
        $.exe(function(err) {});
        isClientInWhiteList();
        if (false == bClientInWhite) {
            addClientToWhiteList();
        } else {
            $.removeLoading();
        }
    }
}

$("#radioBlackList").click(function() {
    $(".block-icon-wrap").show();
});

$("#radioWhiteList").click(function() {
    $(".block-icon-wrap").hide();
});


$("#blackListEditOK").click(function() {
    $.addLoading($(this));
    doSaveBlackList();
});

$("#blackListEditCancel").click(function() {
    $("#editContainerDevicesInBlackList").addClass("nd");
    $("#editContainerDevicesInBlackList").removeClass("editor-container");
    $("#tableDevicesInBlackList").unmask();
    $.reload();
});

$("#whiteListEditOk").click(function() {
    $.addLoading($(this));
    doSaveWhiteList();
});

$("#whiteListEditCancel").click(function() {
    $("#editContainerDevicesInWhiteList").addClass("nd");
    $("#editContainerDevicesInWhiteList").removeClass("editor-container");
    $("#tableDevicesInWhiteList").unmask();
    $.reload();
});

$("#delBlackListIcon").click(function() {
    var ret = checkAnyBlackListBeSelected();
	if( ret != 0)
	{
		return ret;
   	}
    $.confirm(c_str.del_choosed, deleteBlackList, null);
});
function checkAnyBlackListBeSelected(){
	var trFirst = $("#tableDevicesInBlackList").find("tbody tr:eq(1)");
	var td = $("#tableDevicesInBlackList").find("tbody tr td");
	var trSelected = td.find("span.checkbox-click").parents("tr");
	var tdFirst = trFirst.find("td:eq(1)");
	if(tdFirst.text() == "")
	{
		return $.alert(ERR_PARENTCONTROL_NO_ITEM);
	}
	if(trSelected.length == 0)
	{
		return $.alert(ERR_PARENTCONTROL_NO_ITEM);
	}
	return 0;
}
function isClientInWhiteList() {
    var whiteTd = $("#tableDevicesInWhiteList").find("tbody tr td");
    var onlineTd = $("#tableDevicesOnline").find("tbody tr td");

    bClientInWhite = false;

    $.act(ACT_CGI, "/cgi/info");
    $.exe();

    whiteTd.find("span.icon").each(function() {
        var whiteDevMac = $(this).parents("tr").find("td:eq(3)").text();
        if (whiteDevMac == clientMac) {
            bClientInWhite = true;
            return;
        }
    });

    if (bClientInWhite == false) {
        onlineTd.find("span.icon").each(function() {
            var devOnlineMac = $(this).parents("tr").find("td:eq(4)").text();
            if (devOnlineMac == clientMac) {
                clientName = $(this).parents("tr").find("td:eq(2)").text();
                return;
            }
        });
    }
}

function deleteBlackList() {
    var td = $("#tableDevicesInBlackList").find("tbody tr td");
    var tr = td.find("span.checkbox-click").parents("tr");
    td.find("span.checkbox-click").each(function() {
        var blackStackIndex = $(this).parents("tr").find("td:eq(1)").text() - 1;
        var blackDeviceName = $(this).parents("tr").find("td:eq(2)").text();
        if (blackStackIndex < 0) return true;
        $.each(fwList, function() {
            if (this.internalHostRef == blackDeviceName) {
                $.act(ACT_DEL, RULE, this.__stack, null);
            }
        });

        $.act(ACT_DEL, INTERNAL_HOST, blackHostStk[blackStackIndex], null);
    });
    tr.remove();
    var grid = 0;
    $("#tableDevicesInBlackList").find("thead tr th").each(function() {
        grid++;
    });
    $.addEmptyBody($("#tableDevicesInBlackList"), grid);
    $.exe(function(err) {
        if (!err) {
            $.reload();
        }
    });
}

$("#delWhiteListIcon").click(function() {
    var ret = checkAnyWihteListBeSelected();
	if( ret != 0)
	{
		return ret;
   	}
    $.confirm(c_str.del_choosed, deleteWhiteList, null);
});
function checkAnyWihteListBeSelected(){
	var trFirst = $("#tableDevicesInWhiteList").find("tbody tr:eq(1)");
	var td = $("#tableDevicesInWhiteList").find("tbody tr td");
	var trSelected = td.find("span.checkbox-click").parents("tr");
	var tdFirst = trFirst.find("td:eq(1)");
	if(tdFirst.text() == "")
	{
		return $.alert(ERR_PARENTCONTROL_NO_ITEM);
	}
	if(trSelected.length == 0)
	{
		return $.alert(ERR_PARENTCONTROL_NO_ITEM);
	}
	return 0;
}
function deleteWhiteList() {
    var td = $("#tableDevicesInWhiteList").find("tbody tr td");
    var tr = td.find("span.checkbox-click").parents("tr");
    td.find("span.checkbox-click").each(function() {
        var whiteStackIndex = $(this).parents("tr").find("td:eq(1)").text() - 1;
        var whiteDeviceName = $(this).parents("tr").find("td:eq(2)").text();
        if (whiteStackIndex < 0) return true;
        $.each(fwList, function() {
            if (this.internalHostRef == whiteDeviceName) {
                $.act(ACT_DEL, RULE, this.__stack, null);
            }
        });

        $.act(ACT_DEL, INTERNAL_HOST, whiteHostStk[whiteStackIndex], null);
    });
    tr.remove();
    var grid = 0;
    $("#tableDevicesInWhiteList").find("thead tr th").each(function() {
        grid++;
    });
    $.addEmptyBody($("#tableDevicesInWhiteList"), grid);
    $.exe(function(err) {
        if (!err) {
            $.reload();
        }
    });
}

function initDeviceOnlineTable() {
    var array = new Array();
    var deviceOnline = $.act(ACT_GL, LAN_HOST_ENTRY, null, null);

    $.exe(function(err) {
        if (err) return;
        var index = 1;
        $.each(deviceOnline, function() {
	    if (this.active != 1)
		return;
		
            array.push([{
                "text": '<div><input type="checkbox" id="' + index + '_online"/><label></label></div>',
                "width": "5%"
            }, {
                "text": index,
                "width": "%5"
            }, {
                "text": this.hostName,
                "width": "10%"
            }, {
                "text": this.IPAddress,
                "width": "10%"
            }, {
                "text": this.MACAddress.toUpperCase(),
                "width": "15%"
            }, {
                "text": (this.X_TP_ConnType == 0) ? table_str.wired : table_str.wireless,
                "width": "10%"
            }]);

            index++;
            deviceStack[index - 1] = this.__stack;
        });

        $.initTableBody($("#tableDevicesOnline"), array);
        $.tablePages($("#tableDevicesOnline"), 5);

        $("input[id$='_online']").click(function() {
            if ($.allCheckboxSelected($("#tableDevicesOnline")) === true)
            {
                $("#checkbox_devicesOnline").prop('checked', true).data("tpCheckbox").refresh();
            }
            else
            {
                $("#checkbox_devicesOnline").prop('checked', false).data("tpCheckbox").refresh();
            }
        });

        $("#checkbox_devicesOnline").prop('checked', false).data("tpCheckbox").refresh();

    });

    $("#blockDev").click(function() {
        doBlock();
    });
}

function initDeviceInBlackListTable() {
    var array = new Array();
    var hostList = $.act(ACT_GL, INTERNAL_HOST, null, null);
    var ruleList = $.act(ACT_GL, RULE, null, null);

    $.exe(function(err) {
        if (err) return;
        var index = 1;
        $.each(ruleList, function() {

            if (this.isParentCtrl == 0 && this.action == 1) {
                var hostName = this.internalHostRef;
                var ruleStk = this.__stack;

                $.each(hostList, function() {

                    if (this.entryName == hostName) {
                        array.push([{
                            "text": '<div><input type="checkbox" id="' + index +'_checkbox_black"/><label></label></div>',
                            "width": "5%"
                        }, {
                            "text": index,
                            "width": "5%"
                        }, {
                            "text": this.entryName,
                            "width": "10%"
                        }, {
                            "text": this.mac.toUpperCase(),
                            "width": "15%"
                        }, {
                            "text": "<span class='table-grid-icon edit-modify-icon'></span><span class='table-grid-icon edit-trash-icon'></span>",
                            "width": "10%"
                        }]);
                        blackHostStk[index - 1] = this.__stack;
                        blackRuleStk[index - 1] = ruleStk;
                        index++;
                    }
                });
            }
        });
        $.initTableBody($("#tableDevicesInBlackList"), array);
        $.tablePages($("#tableDevicesInBlackList"), 8);

        $("input[id$='_checkbox_black']").click(function() {
            if ($.allCheckboxSelected($("#tableDevicesInBlackList")) === true)
            {
                $("#checkbox_devicesInBlackList").prop('checked', true).data("tpCheckbox").refresh();
            }
            else
            {
                $("#checkbox_devicesInBlackList").prop('checked', false).data("tpCheckbox").refresh();
            }
        });

        $("#checkbox_devicesInBlackList").prop('checked', false).data("tpCheckbox").refresh();

        $("span.edit-modify-icon").click(function() {
            isEdit = 1;
            editStackIndex = $(this).parents("tr").find("td:eq(1)").text() - 1;
            var deviceName = $(this).parents("tr").find("td:eq(2)").text();
            var macAddress = $(this).parents("tr").find("td:eq(3)").text();

            $("#blackDevName").val(deviceName);
            $("#blackMacAddr").val(macAddress);
        });

        $("span.edit-trash-icon").click(function() {
            var stackIndex = $(this).parents("tr").find("td:eq(1)").text();

            if (aclMode == 1) {
                $.act(ACT_DEL, RULE, blackRuleStk[stackIndex - 1], null);
                $.act(ACT_DEL, INTERNAL_HOST, blackHostStk[stackIndex - 1], null);
                $.exe(function(err) {
                    if (!err) $.reload();
                });
            }

        });

    });
}

function initDeviceInWhiteListTable() {
    var array = new Array();
    var lanList = $.act(ACT_GL, INTERNAL_HOST, null, null);
    var fwList = $.act(ACT_GL, RULE, null, null);

    $.exe(function(err) {
        if (err) return;
        var index = 1;
        $.each(fwList, function() {

            if (this.isParentCtrl == 0 && this.action == 0) {
                var hostName = this.internalHostRef;
                var ruleStk = this.__stack;

                $.each(lanList, function() {

                    if (this.entryName == hostName) {
                        array.push([{
                            "text": '<div><input type="checkbox" id="' + index + '_checkbox_white"/><label></label></div>',
                            "width": "5%"
                        }, {
                            "text": index,
                            "width": "5%"
                        }, {
                            "text": this.entryName,
                            "width": "10%"
                        }, {
                            "text": this.mac.toUpperCase(),
                            "width": "15%"
                        }, {
                            "text": "<span class='table-grid-icon edit-modify-icon'></span><span class='table-grid-icon edit-trash-icon'></span>",
                            "width": "10%"
                        }]);
                        whiteHostStk[index - 1] = this.__stack;
                        whiteRuleStk[index - 1] = ruleStk;
                        whiteMacList[index - 1] = this.mac;
                        index++;
                    }

                });
            }
        });
        $.initTableBody($("#tableDevicesInWhiteList"), array);
        $.tablePages($("#tableDevicesInWhiteList"), 8);

        $("input[id$='_checkbox_white']").click(function() {
            if ($.allCheckboxSelected($("#tableDevicesInWhiteList")) === true)
            {
                $("#checkbox_devicesInWhiteList").prop('checked', true).data("tpCheckbox").refresh();
            }
            else
            {
                $("#checkbox_devicesInWhiteList").prop('checked', false).data("tpCheckbox").refresh();
            }
        });

        $("#checkbox_devicesInWhiteList").prop('checked', false).data("tpCheckbox").refresh();

        $("span.edit-modify-icon").click(function() {
            isEdit = 1;
            editStackIndex = $(this).parents("tr").find("td:eq(1)").text() - 1;
            var deviceName = $(this).parents("tr").find("td:eq(2)").text();
            var macAddress = $(this).parents("tr").find("td:eq(3)").text();

            $("#whiteDevName").val(deviceName);
            $("#whiteMacAddr").val(macAddress);
        });

        $("span.edit-trash-icon").click(function() {
            var stackIndex = $(this).parents("tr").find("td:eq(1)").text();

            if (aclMode == 0) {
                $.act(ACT_DEL, RULE, whiteRuleStk[stackIndex - 1], null);
                $.act(ACT_DEL, INTERNAL_HOST, whiteHostStk[stackIndex - 1], null);
                $.exe(function(err) {
                    if (!err) $.reload();
                });
            }

        });

    });
}

function doBlock() {
    var td = $("#tableDevicesOnline").find("tbody tr td");

    td.find("span.checkbox-click").each(function() {
        var stackIndex = $(this).parents("tr").find("td:eq(1)").text();
        var deviceName = $(this).parents("tr").find("td:eq(2)").text().substring(0, 11) + "_ACL";
        var macAddress = $(this).parents("tr").find("td:eq(4)").text();

        if (aclMode == 1) {
            doSaveBlackList(deviceName, macAddress);
        } else if (aclMode == 0) {

            for (var index = 0; index < whiteMacList.length; index++) {
                if (macAddress == whiteMacList[index])
                    break;
            }

            if (index >= whiteMacList.length) {
                return;
            }

            stackIndex = index;

            $.act(ACT_DEL, RULE, whiteRuleStk[stackIndex], null);
            $.act(ACT_DEL, INTERNAL_HOST, whiteHostStk[stackIndex], null);
            $.exe(function(err) {
                if (!err) {
                    $.reload();
                }
            });

        } 
    });
}

function doSaveBlackList(deviceName, macAddress) {
    var editRuleStack;
    var hostAttrs = {};
    var ruleAttrs = {};

    var deviceName = (deviceName === undefined) ? $("#blackDevName").val() : deviceName;
    var macAddress = (macAddress === undefined) ? $("#blackMacAddr").val() : macAddress;

    if (isEdit == 1) {
        var editDevice = $.act(ACT_GET, INTERNAL_HOST, blackHostStk[editStackIndex], null);
        $.exe();
        $.each(fwList, function() {
            if (this.internalHostRef == editDevice.entryName) {
                editRuleStack = this.__stack;
            }
        });
    }

    if (!$.isname(deviceName)) {
        $.alert(ERR_FW_ENTRYNAME_INVAD);
        return;
    }
    if ($.mac(macAddress)) {
        return;
    }

    hostAttrs.type = 1;
    hostAttrs.entryName = deviceName;
    hostAttrs.mac = macAddress;
    hostAttrs.isParentCtrl = 0;

    ruleAttrs.isParentCtrl = 0;
    ruleAttrs.ruleName = deviceName;
    ruleAttrs.internalHostRef = deviceName;
    ruleAttrs.externalHostRef = "";
    ruleAttrs.scheduleRef = "";
    ruleAttrs.action = 1;
    ruleAttrs.enable = 1;

    if (isEdit == 0) {
        $.act(ACT_ADD, INTERNAL_HOST, null, null, hostAttrs);
        $.act(ACT_ADD, RULE, null, null, ruleAttrs);
    } else if (isEdit == 1) {
        $.act(ACT_SET, INTERNAL_HOST, blackHostStk[editStackIndex], null, hostAttrs);
        $.act(ACT_SET, RULE, editRuleStack, null, ruleAttrs);
    }

    $.exe(function(err) {
        $.removeLoading();
        if (!err) {
            $.reload();
        }
    });

}

function addClientToWhiteList() {
    clientName = (clientName == undefined) ? m_str.unknown : clientName;
    $.act(ACT_ADD, INTERNAL_HOST, null, null, ["type=1", "entryName=" + clientName, "mac=" + clientMac]);
    $.act(ACT_ADD, RULE, null, null, ["isParentCtrl=0", "ruleName=" + clientName, "internalHostRef=" + clientName, "externalHostRef=", "scheduleRef=", "action=0", "enable=1"]);
    $.exe(function(err) {
        $.removeLoading();
        if (!err) {
            $.reload();
        }
    });
}

function doSaveWhiteList(deviceName, macAddress) {
    var editRuleStack;
    var hostAttrs = {};
    var ruleAttrs = {};

    var deviceName = (deviceName === undefined) ? $("#whiteDevName").val() : deviceName;
    var macAddress = (macAddress === undefined) ? $("#whiteMacAddr").val() : macAddress;

    if (isEdit == 1) {
        var editDevice = $.act(ACT_GET, INTERNAL_HOST, whiteHostStk[editStackIndex], null);
        $.exe();
        $.each(fwList, function() {
            if (this.internalHostRef == editDevice.entryName) {
                editRuleStack = this.__stack;
            }
        });
    }

    if (!$.isname(deviceName)) {
        $.alert(ERR_FW_ENTRYNAME_INVAD);
        return;
    }
    if ($.mac(macAddress)) {
        return;
    }

    hostAttrs.type = 1;
    hostAttrs.entryName = deviceName;
    hostAttrs.mac = macAddress;

    ruleAttrs.isParentCtrl = 0;
    ruleAttrs.ruleName = deviceName;
    ruleAttrs.internalHostRef = deviceName;
    ruleAttrs.externalHostRef = "";
    ruleAttrs.scheduleRef = "";
    ruleAttrs.action = 0;
    ruleAttrs.enable = 1;

    if (isEdit == 0) {
        $.act(ACT_ADD, INTERNAL_HOST, null, null, hostAttrs);
        $.act(ACT_ADD, RULE, null, null, ruleAttrs);
    } else if (isEdit == 1) {
        $.act(ACT_SET, INTERNAL_HOST, whiteHostStk[editStackIndex], null, hostAttrs);
        $.act(ACT_SET, RULE, editRuleStack, null, ruleAttrs);
    }

    $.exe(function(err) {
        $.removeLoading();
        if (!err) {
            $.reload();
        }
    });

}
</script>

<h3 id="t_title1">Access Control</h3>
<div class="content-container">
    <form class="pure-form pure-form-aligned">
        <div class="button-group-container">
            <b id="t_en">Access Control: </b>
            <ul>
                <li>
                    <button id="ACLOn" class="fst" value="on">On</button>
                </li>
                <li>
                    <button id="ACLOff" class="lst" value="off">Off</button>
                </li>
            </ul>
        </div>
    </form>
</div>

<div class="part-separate"></div>

<h3 id="t_title2">Access Mode</h3>
<div class="content-container">
    <form class="pure-form pure-form-aligned">
        <div id="accessMode">
            <div>
                <b id="t_defmode">Access Mode: </b>
                <input type="radio" name="radioAccessControl" id="radioBlackList" />
                <label class="T_blacklist">Blacklist</label>
            </div>
            <div>
                <b></b>
                <input type="radio" name="radioAccessControl" id="radioWhiteList" />
                <label class="T_white">Whitelist</label>
            </div>
        </div>
        <button id="saveListMode" type="submit" class="green T_save">Save</button>
    </form>
</div>

<div class="part-separate"></div>

<div class="content-container nd" id="deviceInBlackList">
    <form class="pure-form pure-form-aligned">
        <h3 id="t_devblack">Devices in Blacklist</h3>
        <div class="table-op" id="addBlackList">
            <div class="table-btn">
                <span id="addBlackListIcon" class="add-icon"></span>
                <label class="T_add">Add</label>
                <span id="delBlackListIcon" class="delete-icon"></span>
                <label class="T_del">Delete</label>
            </div>
        </div>

        <table id="tableDevicesInBlackList">
            <thead></thead>
            <tbody id="bodyDevicesInBlackList">
                <tr id="editContainerDevicesInBlackList" class="nd">
                    <td colspan="8">
                        <div>
                            <b class="T_c_devname">Device Name: </b>
                            <input type="text" id="blackDevName" maxlength="15" required/>
                        </div>
                        <div>
                            <b class="T_c_macaddr">MAC Address: </b>
                            <input type="text" id="blackMacAddr" maxlength="17" required/>
                        </div>
                        <div class="inline-btn-right">
                            <button type="submit" class="green T_cancel" id="blackListEditCancel">Cancel</button>
                            <button type="submit" class="green T_ok" id="blackListEditOK">OK</button>
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
    </form>
</div>

<div class="content-container nd" id="deviceInWhiteList">
    <form class="pure-form pure-form-aligned">
        <h3 id="t_devwhite">Devices in Whitelist</h3>
        <div class="table-op" id="addWhiteList">
            <div class="table-btn">
                <span id="addWhiteListIcon" class="add-icon"></span>
                <label class="T_add">Add</label>
                <span id="delWhiteListIcon" class="delete-icon"></span>
                <label class="T_del">Delete</label>
            </div>
        </div>

        <table id="tableDevicesInWhiteList">
            <thead></thead>
            <tbody id="bodyDevicesInWhiteList">
                <tr id="editContainerDevicesInWhiteList" class="nd">
                    <td colspan="8">
                        <div>
                            <b class="T_c_devname">Device Name: </b>
                            <input type="text" id="whiteDevName" maxlength="15" required/>
                        </div>
                        <div>
                            <b class="T_c_macaddr">MAC Address: </b>
                            <input type="text" id="whiteMacAddr" maxlength="17" required/>
                        </div>
                        <div class="inline-btn-right">
                            <button type="submit" class="green T_cancel" id="whiteListEditCancel">Cancel</button>
                            <button type="submit" class="green T_ok" id="whiteListEditOk">OK</button>
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
    </form>
</div>

<div class="part-separate"></div>

<h3 id="t_title3">Devices Online</h3>
<div class="content-container">
    <form class="pure-form pure-form-aligned">
        <div class="table-op" id="refreshDeviceOnline">
            <div class="table-btn">
                <span class="refresh-icon"></span>
                <label class="T_refresh">Refresh</label>
                <span id="blockDev" class="block-icon"></span>
                <label class="T_block">Block</label>
            </div>
        </div>

        <table id="tableDevicesOnline">
            <thead></thead>
            <tbody id="bodyDevicesOnline">

            </tbody>
        </table>
    </form>
</div>

<script type="text/javascript">
$.tpInit(init);
</script>
