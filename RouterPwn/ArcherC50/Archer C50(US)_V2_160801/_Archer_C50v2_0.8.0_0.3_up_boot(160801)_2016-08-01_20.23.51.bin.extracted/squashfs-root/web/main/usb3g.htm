<script language="javascript" type="text/javascript">
var usb3gLinkCfgStk;
var PPP3GStk;
var pStk;
var wanPPP3G;
var wanUsb3g;
var wanPPP3GArg = {};
var wanUsb3gArg = {};
var flagDisconneting = false;
var tag;
var pinStatusStr = {};
var SIM_PIN_UNKNOW_STATUS = 5;
var CONN_SCRIPT_FAIL = 9;
var SIM_UNLOCKED = 16;
var SIM_PIN2 = 17;
var SIM_PUK2 = 18;
var SIM_PIN = 19;
var SIM_PUK = 20;
var NETWORK_SUBSET_PIN = 21;
var NETWORK_SUBSET_PUK = 22;
var NETWORK_PIN = 23;
var NETWORK_PUK = 24;
var SERVICE_PIN = 25;
var SERVICE_PUK = 26;
var CORP_PIN = 27;
var CORP_PUK = 28;
var PH_SIM_PIN = 29;
var PH_FSIM_PIN = 30;
var PH_FSIM_PUK = 31;
var PHONE_FAILURE = 32;
var DHCP4GStk;
var wanDHCP4G;
var wanDHCP4GArg = {};
var usb3GObj;
var pageInit = 1;
var currentLocation = "Other";

function doReload(err) {
    if (!err) {
        $.reload();
    }
}

function showISP() {
    var $selIspObj = $("#isp_sel");

    $("#isp_sel").empty();

    i = 0;

    for (tag in w3gisp_js[currentLocation]) {
        if (w3gisp_js[currentLocation][tag]["isp_name"] == undefined) {
            continue;
        }

        var $ispOption = $("<option></option>")
        $ispOption.val(i);

        $ispOption.text(w3gisp_js[currentLocation][tag]["isp_name"]);

        $selIspObj.append($ispOption);
        i++;
    }
    var options = {
        refresh: 1
    };
    $('#isp_sel').tpSelect(options);
}

function showParam(initFlag) {
    var locationIndex = currentLocation;
    var isp = "isp" + $("#isp_sel").data("value");

    if (1 == pageInit) {
        $("#manual_apn").tpCheckbox();
    }

    if ($("#manual_apn").prop("data-checked") == false) {
        $("#username").val(w3gisp_js[locationIndex][isp]["username"]);
        $("#password").val(w3gisp_js[locationIndex][isp]["password"]);
        $("#apn").val(w3gisp_js[locationIndex][isp]["apn"]);
        $("#dial_num").val(w3gisp_js[locationIndex][isp]["dial_num"]);
    } else if (initFlag == 1) {
        $("#username").val(wanPPP3G.username);
        $("#password").val(wanPPP3G.password);
        $("#apn").val(wanUsb3g.APN);
        $("#dial_num").val(wanUsb3g.dialNumber);
    }

}

function changeISP() {
    showParam(0);
}

$("#usb3g_backup_en").click(function doBackupEnClk() {
    var bacupEnOnPage = ($("#usb3g_backup_en").prop("data-checked") == true) ? 1 : 0;
    var manualAPN = ($("#manual_apn").prop("data-checked") == true) ? 1 : 0;

    if (bacupEnOnPage == 1) {
        if (INCLUDE_TFC_PERU) {
            $("#backup_time").removeClass("nd");
        }
    } else {
        if (INCLUDE_TFC_PERU) {
            $("#backup_time").addClass("nd");
        }
    }

    disableWidgetForBackup("NONE", bacupEnOnPage, manualAPN);
});

$("#manual_apn").click(function doManuallyAPN() {
    if ($("#manual_apn").prop("data-checked") == true) {
        $("#setManual").removeClass("nd");
        $("#isp_sel").prop("disabled", true);
    } else {
        $("#dial_num").val(w3gisp_js[currentLocation]["isp" + $("#isp_sel").data("value")]["dial_num"]);
        $("#apn").val(w3gisp_js[currentLocation]["isp" + $("#isp_sel").data("value")]["apn"]);
        $("#username").val(w3gisp_js[currentLocation]["isp" + $("#isp_sel").data("value")]["username"]);
        $("#password").val(w3gisp_js[currentLocation]["isp" + $("#isp_sel").data("value")]["password"]);
        $("#setManual").addClass("nd");
        $("#isp_sel").prop("disabled", false);
    }
});

function doManuallyIdleTime(val) {
    if (val == 1) {
        $("#idle_time").prop("disabled", false);
    } else {
        $("#idle_time").prop("disabled", true);
    }
}

$("#connectMode").click(function() {
    if ($("#connectMode").data("value") == "Always on") {
        doManuallyIdleTime(0);
    } else if ($("#connectMode").data("value") == "Connect on demand") {
        doManuallyIdleTime(1);
    } else if ($("#connectMode").data("value") == "Connect manually") {
        doManuallyIdleTime(1);
    }
});

$("#manual_pinCode").click(function() {
    if ($("#manual_pinCode").prop("data-checked") == true) {
        $("#p_old_pin").removeClass("nd");
        $("#p_new_pin1").removeClass("nd");
        $("#p_new_pin2").removeClass("nd");
        $("#p_pinChangeBtn").removeClass("nd");
    } else {
        $("#p_old_pin").addClass("nd");
        $("#p_new_pin1").addClass("nd");
        $("#p_new_pin2").addClass("nd");
        $("#p_pinChangeBtn").addClass("nd");
    }
});

$("#manual_ipAddr").click(function doManuallyIpAddr() {
    if ($("#manual_ipAddr").prop("data-checked") == true) {
        $("#static_ip_div").removeClass("nd");
    } else {
        $("#static_ip_div").addClass("nd");
    }
});

$("#manual_dns").click(function doManuallyDNS() {
    if ($("#manual_dns").prop("data-checked") == true) {
        $("#primary_dns_div").removeClass("nd");
        $("#secondary_dns_div").removeClass("nd");
    } else {
        $("#primary_dns_div").addClass("nd");
        $("#secondary_dns_div").addClass("nd");
    }
});

function disableWidgetForBackup(systemMode, backupEnable, manulAPN) {
    if (systemMode != "USB_3G") {
        $("#connectBtn").prop("disabled", true);
        $("#disconnectBtn").prop("disabled", true);

        if (backupEnable == 1) {
            $("#pppClick").removeClass("nd");
            if (manulAPN != 1) {
                $("#setManual").addClass("nd");
                $("#isp_sel").prop("disabled", false);
            } else {
                $("#setManual").removeClass("nd");
            }
        } else {
            $("#pppClick").addClass("nd");
            $("#ppp_elem_adv").addClass("nd");
            $("#isp_sel").prop("disabled", true);
        }
        if (usb3GObj.cardName != "Unplugged") {
        $("#isp_sel").tpSelect({
            refresh: 1
        });
    }
}
}

function update3GState(usb3gStack, wanPpp3gStack, wanDhcp4gStack) {
    $.auto(function() {
        usb3GObj = $.act(ACT_GET, WAN_USB_3G_LINK_CFG, usb3gStack, null, null, ["cardName", "pinStatus", "isLteModem"]);
        var wanPpp3gObj = $.act(ACT_GET, WAN_PPP_CONN, wanPpp3gStack, null, null, ["enable", "connectionStatus", "connectionTrigger"]);
        var wanDhcp4gObj = $.act(ACT_GET, WAN_IP_CONN, wanDhcp4gStack, null, null, ["enable", "connectionStatus", "connectionTrigger"]);
        if (INCLUDE_WAN_MODE) {
            var sysMode = $.act(ACT_GET, SYS_MODE, null, null, ["mode"]);
        }

        if (!$.exe()) {
            $("#card_name_unplugged").addClass("nd");
            $("#card_name_unknown").addClass("nd");
            $("#card_name_ing").addClass("nd");
            $("#card_name_ok").addClass("nd");

            if (usb3GObj.cardName == "Unplugged") {
                $("#card_name_unplugged").removeClass("nd");
            } else if (usb3GObj.cardName == "Unknown") {
                $("#card_name_unknown").removeClass("nd");
            } else if (usb3GObj.cardName == "Identifying...") {
                $("#card_name_ing").removeClass("nd");
            } else {
                $("#card_name_ok").removeClass("nd");
            }
            $("#pin_status_unknown").addClass("nd");
            $("#pin_status_fail").addClass("nd");
            $("#pin_status_ready").addClass("nd");
            $("#pin_status_pin").addClass("nd");
            $("#pin_status_puk").addClass("nd");
            $("#pin_status_errror").addClass("nd");
            $("#pin_unlock").addClass("nd");

            if (usb3GObj.pinStatus == SIM_PIN_UNKNOW_STATUS) {
                $("#pin_status_unknown").removeClass("nd");
            } else if (usb3GObj.pinStatus == CONN_SCRIPT_FAIL) {
                $("#pin_status_fail").removeClass("nd");
            } else if (usb3GObj.pinStatus == SIM_PIN) {
                $("#pin_status_pin").removeClass("nd");
                $("#pin_unlock").removeClass("nd");
            } else if (usb3GObj.pinStatus == SIM_PUK) {
                $("#pin_status_puk").removeClass("nd");
            } else if (usb3GObj.pinStatus == PHONE_FAILURE) {
                $("#pin_status_errror").removeClass("nd");
            } else {
                $("#pin_status_ready").removeClass("nd");
            }

            if (usb3GObj.userSaved == 0 && usb3GObj.ispCfgReaded == 1 && usb3GObj.cardName != "Unplugged") {
                currentLocation = "location" + usb3GObj.locationIdx;
                showISP();

                $("#isp_sel option[value='" + usb3GObj.ispIdx + "']").prop('selected', 'selected');
                $("#isp_sel").tpSelect({
                    refresh: 1
                });

                if ($("#manual_apn").prop("data-checked") == false) {
                    showParam(1);
                }
            }

            if ((usb3GObj.isLteModem == false) && (wanPpp3gObj.enable == true)) {
                if (wanPpp3gObj.connectionStatus == "Connected") {
                    $("#connectBtn").prop("disabled", true);
                    if (flagDisconneting == false) {
                        $("#disconnectBtn").prop("disabled", false);
                    }
                    $("#isp_sel").prop("disabled", true);
                } else if ((wanPpp3gObj.connectionStatus == "Disconnected") || (wanPpp3gObj.connectionStatus == "Unconfigured")) {
                    if (flagDisconneting == false) {
                        $("#connectBtn").prop("disabled", false);
                    }
                    $("#disconnectBtn").prop("disabled", true);
                    $("#isp_sel").prop("disabled", false);
                } else {
                    $("#connectBtn").prop("disabled", true);
                    $("#disconnectBtn").prop("disabled", true);
                    $("#isp_sel").prop("disabled", false);
                }
            } else if ((usb3GObj.isLteModem == true) && (wanDhcp4gObj.enable == true)) {
                if (wanDhcp4gObj.connectionStatus == "Connected") {
                    $("#connectBtn").prop("disabled", true);
                    if (flagDisconneting == false) {
                        $("#disconnectBtn").prop("disabled", false);
                    }
                    $("#isp_sel").prop("disabled", true);
                } else if ((wanDhcp4gObj.connectionStatus == "Disconnected") || (wanDhcp4gObj.connectionStatus == "Unconfigured")) {
                    if (flagDisconneting == false) {
                        $("#connectBtn").prop("disabled", false);
                    }
                    $("#disconnectBtn").prop("disabled", true);
                    $("#isp_sel").prop("disabled", false);
                } else {
                    $("#connectBtn").prop("disabled", true);
                    $("#disconnectBtn").prop("disabled", true);
                    $("#isp_sel").prop("disabled", false);
                }
            } else {
                $("#connectBtn").prop("disabled", true);
                $("#disconnectBtn").prop("disabled", true);
                $("#isp_sel").prop("disabled", false);
            }

            if (flagDisconneting == false) {
                if (usb3GObj.isLteModem == false) {
                    if (wanPpp3gObj.connectionStatus == "Connected") {
                        $("#network_status").html("<span class='T T_connected'>" + m_str.connected + "</span>");
                        $("#connection_status").html("<span class='T T_connected'>" + m_str.connected + "</span>");
                    } else if ((wanPpp3gObj.connectionStatus == "Disconnected") || (wanPpp3gObj.connectionStatus == "Unconfigured")) {
                        $("#network_status").html("<span class='T T_disconnected'>" + m_str.disconnected + "</span>");
                        $("#connection_status").html("<span class='T T_disconnected'>" + m_str.disconnected + "</span>");
                    } else {
                        $("#network_status").html("<span class='T T_connecting'>" + m_str.connecting + "</span>");
                        $("#connection_status").html("<span class='T T_connecting'>" + m_str.connecting + "</span>");
                    }
                } else if (usb3GObj.isLteModem == true) {
                    if (wanDhcp4gObj.connectionStatus == "Connected") {
                        $("#network_status").html("<span class='T T_connected'>" + m_str.connected + "</span>");
                        $("#connection_status").html("<span class='T T_connected'>" + m_str.connected + "</span>");
                    } else if ((wanDhcp4gObj.connectionStatus == "Disconnected") || (wanDhcp4gObj.connectionStatus == "Unconfigured")) {
                        $("#network_status").html("<span class='T T_disconnected'>" + m_str.disconnected + "</span>");
                        $("#connection_status").html("<span class='T T_disconnected'>" + m_str.disconnected + "</span>");
                    } else {
                        $("#network_status").html("<span class='T T_connecting'>" + m_str.connecting + "</span>");
                        $("#connection_status").html("<span class='T T_connecting'>" + m_str.connecting + "</span>");
                    }
                }
            }

            if (1 == pageInit) {
                $("#usb3g_backup_en").tpCheckbox();
                $("#manual_apn").tpCheckbox();
            }

            var bacupEnOnPage = ($("#usb3g_backup_en").prop("data-checked") == true) ? 1 : 0;
            var manualAPN = ($("#manual_apn").prop("data-checked") == true) ? 1 : 0;

            if (INCLUDE_WAN_MODE) {
                disableWidgetForBackup(sysMode.mode, bacupEnOnPage, manualAPN);
            } else {
                disableWidgetForBackup("NONE", bacupEnOnPage, manualAPN);
            }

            if (usb3GObj.cardName != "Unplugged") {
            $("#isp_sel").tpSelect({
                refresh: 1
            });
        }
        }
    }, 5000, true);
}

function init() {
    var usb3gList = $.act(ACT_GL, WAN_USB_3G_LINK_CFG, null, null, ["backupEnable"]);
    var wanPPPList = $.act(ACT_GL, WAN_PPP_CONN, null, null, ["enable", "transportType"]);
    var wanTypes = $.act(ACT_GL, WAN_COMMON_INTF_CFG, null, null, ["WANAccessType"]);
    var wanIPList = $.act(ACT_GL, WAN_IP_CONN, null, null, ["enable", "X_TP_TransportType"]);
    var wlanList = $.act(ACT_GL, LAN_WLAN, null, null, ["RegulatoryDomain"]);

    if (INCLUDE_LAN_WLAN) {
        basicList = $.act(ACT_GL, LAN_WLAN, null, null, ["RegulatoryDomain", "Standard", "X_TP_Bandwidth"]);
    }

    if (!$.exe()) {
        if (INCLUDE_LAN_WLAN) {
            pWlanStk = basicList[0].__stack;
            if (INCLUDE_LAN_WLAN_DUALBAND) {
                pWlan5GStk = basicList[1].__stack;
            }
        }

        $.each(wanTypes, function() {
            if (this.WANAccessType == "USB_3G") {
                pStk = this.__stack;
            }

        });

        $.each(wanPPPList, function() {
            var tmpStk = $.stkPop(this.__stack, 2);
            if (pStk == tmpStk) {
                if (this.transportType == "PPP3G") {
                    PPP3GStk = this.__stack;
                    wanPPP3G = $.act(ACT_GET, WAN_PPP_CONN, this.__stack, null, null);
                }
            }
        });

        $.each(wanIPList, function() {
            var tmpStk = $.stkPop(this.__stack, 2);
            if (pStk == tmpStk) {
                if (this.X_TP_TransportType == "DHCP4G") {
                    DHCP4GStk = this.__stack;
                    wanDHCP4G = $.act(ACT_GET, WAN_IP_CONN, this.__stack, null, null);
                }
            }
        });

        $.each(usb3gList, function() {
            var tmpStk = $.stkPop(this.__stack, 1);
            if (pStk == tmpStk) {
                usb3gLinkCfgStk = this.__stack;
                wanUsb3g = $.act(ACT_GET, WAN_USB_3G_LINK_CFG, this.__stack, null, null);
            }
        });

        if (INCLUDE_WAN_MODE) {
            var sysMode = $.act(ACT_GET, SYS_MODE, null, null, ["mode"]);
        }

        if (!$.exe()) {
            if (INCLUDE_WAN_MODE) {
                if (sysMode.mode == "USB_3G") {
                    $("#connectStat").addClass("nd");

                    $("#usb3gBackupEnable").addClass("nd");
                    $("#backupNotice").addClass("nd");
                } else if (sysMode.mode == "DSL") {
                    $("#conMode").addClass("nd");
                    $("#maxIdleTime").addClass("nd");
                    $("#networkStat").addClass("nd");

                    $("#sysmode_dsl").removeClass("nd");
                    if (wanUsb3g.backupEnable == 1) {
                        if (INCLUDE_TFC_PERU) {
                            $("#backup_time").removeClass("nd");
                        }
                    } else {}
                } else if (sysMode.mode == "ETH") {
                    $("#conMode").addClass("nd");
                    $("#maxIdleTime").addClass("nd");
                    $("#networkStat").addClass("nd");

                    $("#sysmod_eth").removeClass("nd");
                    if (wanUsb3g.backupEnable == 1) {
                        if (INCLUDE_TFC_PERU) {
                            $("#backup_time").removeClass("nd");
                        }
                    }
                }
            }

            $("#pppClick").removeClass("nd");
            $("#ppp_elem_adv").addClass("nd");
            $("#usb3g_backup_en").prop("checked", ((wanUsb3g.backupEnable == 1) ? true : false));

            if (INCLUDE_TFC_PERU) {
                $("#backup_min_sel option[value='" + Math.floor(wanUsb3g.backupDelay / 60) + "']").prop("selected", "selected");

                $("#backup_sec_sel option[value='" + (parseInt(wanUsb3g.backupDelay, 10) - Math.floor(wanUsb3g.backupDelay / 60) * 60) + "']").prop("selected", "selected");

                $("#revert_min_sel option[value='" + Math.floor(wanUsb3g.revertDelay / 60) + "']").prop('selected', 'selected');

                $("#revert_sec_sel option[value='" + (parseInt(wanUsb3g.revertDelay, 10) - Math.floor(wanUsb3g.revertDelay / 60) * 60) + "']").prop('selected', 'selected');

                if ($("#backup_min_sel").data("value") == 10) {
                    $("#backup_sec_sel").prop("disabled", true);
                }

                if ($("#revert_min_sel").data("value") == 10) {
                    $("#revert_sec_sel").prop("disabled", true);
                }
            }

            $("#manual_pinCode").prop("checked", false);
            $("#p_chg_pin_en").addClass("nd");
            $("#p_old_pin").addClass("nd");
            $("#p_new_pin1").addClass("nd");
            $("#p_new_pin2").addClass("nd");
            $("#p_pinChangeBtn").addClass("nd");

            currentLocation = "location" + wanUsb3g.locationIdx;
            showISP();

            $("#isp_sel option[value='" + wanUsb3g.ispIdx + "']").prop('selected', 'selected');
            $("#isp_sel").tpSelect({
                refresh: 1
            });

            $("#manual_apn").prop("checked", (wanUsb3g.manualAPN == 1) ? true : false);

            showParam(1);

            if (wanUsb3g.manualAPN == 1 || wanUsb3g.locationIdx == 500) {
                $("#setManual").removeClass("nd");
                $("#isp_sel").prop("disabled", true);
            } else {
                $("#setManual").addClass("nd");
                $("#isp_sel").prop("disabled", false);
            }

            if (wanPPP3G.connectionTrigger == "OnDemand") {
                $("#connectMode option[value='" + "Connect on demand" + "']").prop('selected', 'selected');
                $("#idle_time").val(wanPPP3G.idleDisconnectTime);
            } else if (wanPPP3G.connectionTrigger == "AlwaysOn") {
                $("#connectMode option[value='" + "Always on" + "']").prop('selected', 'selected');
                $("#idle_time").prop("disabled", true);
            } else if (wanPPP3G.connectionTrigger == "Manual") {
                $("#connectMode option[value='" + "Connect manually" + "']").prop('selected', 'selected');
                $("#idle_time").val(wanPPP3G.idleDisconnectTime);
            }

            if (wanPPP3G.PPPAuthenticationProtocol == "AUTO_AUTH") {
                $("#ppp_authpro option[value='" + "AUTO_AUTH" + "']").prop("selected", "selected");
            } else if (wanPPP3G.PPPAuthenticationProtocol == "PAP") {
                $("#ppp_authpro option[value='" + "PAP" + "']").prop("selected", "selected");
            } else if (wanPPP3G.PPPAuthenticationProtocol == "CHAP") {
                $("#ppp_authpro option[value='" + "CHAP" + "']").prop("selected", "selected");
            }

            $("#mtu_size").val(wanPPP3G.maxMRUSize);
            $("#ppp_echotime").val(wanPPP3G.PPPLCPEcho ? wanPPP3G.PPPLCPEcho : 0);

            $("#static_ip").val(wanPPP3G.externalIPAddress ? wanPPP3G.externalIPAddress : "0.0.0.0");

            $("#manual_ipAddr").prop("checked", (wanPPP3G.X_TP_UseStaticIP == 1) ? 1 : 0);

            if (wanPPP3G.X_TP_UseStaticIP == 1) {
                $("#static_ip_div").removeClass("nd");
            } else {
                $("#static_ip_div").addClass("nd");
            }

            $("#dns1").val((wanPPP3G.DNSServers.split(",")[0]) ? wanPPP3G.DNSServers.split(",")[0] : "0.0.0.0");
            $("#dns2").val((wanPPP3G.DNSServers.split(",")[1]) ? wanPPP3G.DNSServers.split(",")[1] : "0.0.0.0");
            $("#manual_dns").prop("checked", (wanPPP3G.DNSOverrideAllowed == 1) ? true : false);

            if (wanPPP3G.DNSOverrideAllowed == 1) {
                $("#primary_dns_div").removeClass("nd");
                $("#secondary_dns_div").removeClass("nd");
            } else {
                $("#primary_dns_div").addClass("nd");
                $("#secondary_dns_div").addClass("nd");
            }

            update3GState(usb3gLinkCfgStk, PPP3GStk, DHCP4GStk);

            pageInit = 0;
        }
    }
}

function addUsb3gAttrs() {
    wanUsb3gArg.backupEnable = ($("#usb3g_backup_en").prop("data-checked") == true) ? 1 : 0;

    if (INCLUDE_TFC_PERU) {
        wanUsb3gArg.backupDelay = parseInt($("#backup_min_sel").data("value"), 10) * 60 + parseInt($("#backup_sec_sel").data("value"), 10);
        wanUsb3gArg.revertDelay = parseInt($("#revert_min_sel").data("value"), 10) * 60 + parseInt($("#revert_sec_sel").data("value"), 10);
    }

    wanUsb3gArg.ispIdx = $("#isp_sel").data("value");
    wanUsb3gArg.manualAPN = ($("#manual_apn").prop("data-checked") == true) ? 1 : 0;
    wanUsb3gArg.dialNumber = $("#dial_num").val();
    wanUsb3gArg.APN = $("#apn").val();

    if (wanUsb3g.userSaved == 0) {
        wanUsb3gArg.userSaved = 1;
    }

    var pattern = /[^0-9\*#]/ig;

    if (wanUsb3gArg.dialNumber.match(pattern) != null) {
        $.alert(ERR_3G_INVLIAD_DIALNUM);
        $("#dial_num").focus();
        $("#dial_num").select();
        return false;
    }

    return true;
}

function addPPP3GAttrs() {
    wanPPP3GArg.username = $("#username").val();
    wanPPP3GArg.password = $("#password").val();

    if ($("#connectMode").data("value") == "Connect on demand") {
        wanPPP3GArg.connectionTrigger = "OnDemand";
        wanDHCP4GArg.connectionTrigger = "OnDemand";

        if (($("#idle_time").val()) && ($.isnum($("#idle_time").val()))) {
            wanPPP3GArg.idleDisconnectTime = parseInt($("#idle_time").val(), 10);
            wanDHCP4GArg.idleDisconnectTime = parseInt($("#idle_time").val(), 10);
        } else {
            $.alert(ERR_IDLETIME_INVAD);
            var element = $("#idle_time");
            if (element) {
                element.focus();
                element.select();
            }
            return false;
        }
    } else if ($("#connectMode").data("value") == "Always on") {
        wanPPP3GArg.connectionTrigger = "AlwaysOn";
        wanDHCP4GArg.connectionTrigger = "AlwaysOn";
    } else if ($("#connectMode").data("value") == "Connect manually") {
        wanPPP3GArg.connectionTrigger = "Manual";
        wanDHCP4GArg.connectionTrigger = "Manual";

        if (($("#idle_time").val()) && ($.isnum($("#idle_time").val()))) {
            wanPPP3GArg.idleDisconnectTime = parseInt($("#idle_time").val(), 10);
            wanDHCP4GArg.idleDisconnectTime = parseInt($("#idle_time").val(), 10);
        } else {
            $.alert(ERR_IDLETIME_INVAD);
            var element = $("#idle_time");
            if (element) {
                element.focus();
                element.select();
            }
            return false;
        }
    }

    wanPPP3GArg.PPPAuthenticationProtocol = $("#ppp_authpro").data("value");

    if (($("#mtu_size").val() >= 576) && ($("#mtu_size").val() <= 1492)) {
        wanPPP3GArg.maxMRUSize = parseInt($("#mtu_size").val(), 10);
    } else {
        $.alert(ERR_WAN_PPPOE_MTU_INVAD);
        var element = $("#mtu_size");
        if (element) {
            element.focus();
            element.select();
        }
        return false;
    }
    wanPPP3GArg.NATEnabled = 1;

    if ((parseInt($("#ppp_echotime").val(), 10) >= 0) && (parseInt($("#ppp_echotime").val(), 10) <= 120)) {
        wanPPP3GArg.PPPLCPEcho = parseInt($("#ppp_echotime").val(), 10);
    } else {
        $.alert(ERR_WAN_ECHOTIME_INVAD);
        var element = $("#ppp_echotime")[0];
        if (element) {
            element.focus();
            element.select();
        }
        return false;
    }

    if ($("#manual_ipAddr").prop("data-checked") == true) {
        if (($("#static_ip").val() != "") && ($("#static_ip").val() != "0.0.0.0") && ($.ifip($("#static_ip").val(), true))) {
            $.alert(ERR_IP_FORMAT);
            var element = $("#static_ip")[0];
            if (element) {
                element.focus();
                element.select();
            }
            return false;
        }
        wanPPP3GArg.X_TP_UseStaticIP = 1;
        wanPPP3GArg.externalIPAddress = ($("#static_ip").val()) ? $.ip2ip($("#static_ip").val()) : "0.0.0.0";
    } else {
        wanPPP3GArg.X_TP_UseStaticIP = 0;
    }

    if ($("#manual_dns").prop("data-checked") == true) {
        if (($("#dns1").val() != "") && ($("#dns1").val() != "0.0.0.0") && ($.ifip($("#dns1").val(), true))) {
            $.alert(ERR_WAN_DNSADDR_INVAD);
            var element = $("#dns1")[0];
            if (element) {
                element.focus();
                element.select();
            }
            return false;
        }

        if (($("#dns2").val() != "") && ($("#dns2").val() != "0.0.0.0") && ($.ifip($("#dns2").val(), true))) {
            $.alert(ERR_WAN_SECDNS_INVAD);
            var element = $("#dns2")[0];
            if (element) {
                element.focus();
                element.select();
            }
            return false;
        }

        var tmpDns1 = ($("#dns1").val()) ? $.ip2ip($("#dns1").val()) : "0.0.0.0";
        var tmpDns2 = ($("#dns2").val()) ? $.ip2ip($("#dns2").val()) : "0.0.0.0";

        wanPPP3GArg.DNSOverrideAllowed = 1;
        wanPPP3GArg.DNSServers = tmpDns1 + "," + tmpDns2;
    } else {
        wanPPP3GArg.DNSOverrideAllowed = 0;
    }
    return true;
}

function doSave(val) {
    $.addLoading($(this));
    if (!addUsb3gAttrs()) {
        return;
    }
    if (!addPPP3GAttrs()) {
        return;
    }

    $.act(ACT_SET, WAN_USB_3G_LINK_CFG, usb3gLinkCfgStk, null, wanUsb3gArg);
    $.act(ACT_SET, WAN_PPP_CONN, PPP3GStk, null, wanPPP3GArg);
    $.act(ACT_SET, WAN_IP_CONN, DHCP4GStk, null, wanDHCP4GArg);

    $.exe(function(ret) {
        if (!ret) {
            $.removeLoading();
            $.reload();
        }
    });
}

$("#saveBtn").click(function() {
    doSave(0);
});

$("#connectBtn").click(function() {
    $.addLoading($(this));
    doSave(1);
    $("#connectBtn").prop("disabled", true);

    if (usb3GObj.isLteModem == false) {
        $.act(ACT_OP, ACT_OP_PPP_CONN, PPP3GStk);
    } else if (usb3GObj.isLteModem == true) {
        $.act(ACT_OP, ACT_OP_DHCP_RENEW, DHCP4GStk);
    }

    $("#network_status").html("<span class='T T_connecting'>" + m_str.connecting + "</span>");
    $("#connection_status").html("<span class='T T_connecting'>" + m_str.connecting + "</span>");

    if (!$.exe()) {
        $.removeLoading();
        $.timeout(doReload, 1500);
    }
});

$("#disconnectBtn").click(function() {
    $.addLoading($(this));
    $("#disconnectBtn").prop("disabled", true);

    if (usb3GObj.isLteModem == false) {
        $.act(ACT_OP, ACT_OP_PPP_DISCONN, PPP3GStk);
    } else if (usb3GObj.isLteModem == true) {
        $.act(ACT_OP, ACT_OP_DHCP_RELEASE, DHCP4GStk);
    }

    $("#network_status").html("<span class='T T_disconnecting'>" + s_str.disconnecting + "</span>");
    $("#connection_status").html("<span class='T T_disconnecting'>" + s_str.disconnecting + "</span>");

    flagDisconneting = true;

    if (!$.exe()) {
        doSave(1);
        $.removeLoading();
        $.timeout(doReload, 5000);
    }
});

$("#pinUnlockBtn").click(function doPinUnlock() {
    var unlockPinCode;
    unlockPinCode = $("#pin_code").val();
    if (unlockPinCode === "")
        return $.alert(ERR_PIN_CODE_EMPTY);
    if ($.asc(unlockPinCode, true))
        return $.alert(ERR_PIN_ASCII);

    $.act(ACT_SET, WAN_USB_3G_LINK_CFG, usb3gLinkCfgStk, null, {
        pinCode: $("#pin_code").val(),
        pinAction: "3"
    });

    $.exe(function(ret) {
        if (!ret) $.reload();
    });
});

$("#pinChangeBtn").click(function() {
    var oldPin;
    var newPin1;

    oldPin = $("#old_pin").val();
    if (oldPin === "")
        return $.alert(ERR_PIN_CODE_EMPTY);
    if ($.asc(oldPin, true))
        return $.alert(ERR_PIN_ASCII);

    newPin1 = $("#new_pin1").val();
    if (newPin1 === "")
        return $.alert(ERR_PIN_CODE_EMPTY);
    if ($.asc(newPin1, true))
        return $.alert(ERR_PIN_ASCII);
    if (newPin1 !== $("#new_pin2").val())
        return $.alert(ERR_PIN_CODE_CONFLICT);

    $.act(ACT_SET, WAN_USB_3G_LINK_CFG, usb3gLinkCfgStk, null, {
        pinCode: oldPin + "," + newPin1,
        pinAction: "4"
    });

    $.exe(doReload);
});

$("#advClick").click(function() {
    if ($("#ppp_elem_adv").hasClass("nd")) {
        $("#ppp_elem_adv").removeClass("nd");
    } else {
        $("#ppp_elem_adv").addClass("nd");
    }
});

function changeBackupMin() {
    if ($("#backup_min_sel").data("value") == "10") {
        $("#backup_sec_sel option[value='" + 0 + "']").prop("selected", "selected");
        $("#backup_sec_sel").prop("disabled", true);
    } else {
        $("#backup_sec_sel").prop("disabled", false);
    }
}

function changeRevertMin() {
    if ($("#revert_min_sel").data("value") == "10") {
        $("#revert_sec_sel option[value='" + 0 + "']").prop('selected', 'selected');
        $("#revert_sec_sel").prop("disabled", true);
    } else {
        $("#revert_sec_sel").prop("disabled", false);
    }
}

$("#modem_set_Btn").click(function doModemSet() {
    $.loadMain("usb3gModemList.htm");
});
</script>

<h3 id="t_sett">3G/4G Settings</h3>

<div class="content-container">
    <form class="pure-form pure-form-aligned">
        <div id="backupNotice">
            <p class="cfg-line" id="t_3g_info">Note: 3G/4G access is unavailable in the current operation mode. Please enable 3G/4G backup or change the operation mode to 3G/4G Router Mode.</p>
        </div>

        <div id="usb3gBackupEnable">
            <input type="checkbox" id="usb3g_backup_en" />
            <label class="T T_en3gbackup">Enable 3G/4G as a backup solution for Internet access</label>
        </div>

        <div id="backup_time" class="nd">
            <b class="item T" id="t_backup_delay_time">Backup Delay:</b>
            <select id="backup_min_sel" onchange="changeBackupMin()">
                <option id="bk_m_0" value="0">0</option>
                <option id="bk_m_1" value="1">1</option>
                <option id="bk_m_2" value="2">2</option>
                <option id="bk_m_3" value="3">3</option>
                <option id="bk_m_4" value="4">4</option>
                <option id="bk_m_5" value="5">5</option>
                <option id="bk_m_6" value="6">6</option>
                <option id="bk_m_7" value="7">7</option>
                <option id="bk_m_8" value="8">8</option>
                <option id="bk_m_9" value="9">9</option>
                <option id="bk_m_10" value="10">10</option>
            </select>
            <span class="T T_minutes">minutes</span>
            <select id="backup_sec_sel">
                <option id="bk_s_0" value="0">0</option>
                <option id="bk_s_15" value="15">15</option>
                <option id="bk_s_30" value="30">30</option>
                <option id="bk_s_45" value="45">45</option>
            </select>
            <span class="T T_seconds">seconds</span>

            <b class="item T" id="t_revert_delay_time">Revert Delay:</b>
            <select id="revert_min_sel" onchange="changeRevertMin()">
                <option id="rv_m_0" value="0">0</option>
                <option id="rv_m_1" value="1">1</option>
                <option id="rv_m_2" value="2">2</option>
                <option id="rv_m_3" value="3">3</option>
                <option id="rv_m_4" value="4">4</option>
                <option id="rv_m_5" value="5">5</option>
                <option id="rv_m_6" value="6">6</option>
                <option id="rv_m_7" value="7">7</option>
                <option id="rv_m_8" value="8">8</option>
                <option id="rv_m_9" value="9">9</option>
                <option id="rv_m_10" value="10">10</option>
            </select>
            <span class="T T_minutes">minutes</span>
            <select id="revert_sec_sel">
                <option id="rv_s_0" value="0">0</option>
                <option id="rv_s_15" value="15">15</option>
                <option id="rv_s_30" value="30">30</option>
                <option id="rv_s_45" value="45">45</option>
            </select>
            <span class="T T_seconds">seconds</span>
        </div>

        <div class="pure-control-group" style="line-height: 30px;">
            <label class="label-title item T l" id="t_3g_modem">USB 3G/4G Modem:</label>
            <span class="text nd T" id="card_name_unplugged">Unplugged</span>
            <span class="text nd T T_unknown" id="card_name_unknown">Unknown</span>
            <span class="text nd T" id="card_name_ing">Identifying...</span>
            <span class="text nd T" id="card_name_ok">Successfully Identified</span>
        </div>

        <div class="pure-control-group" style="line-height: 30px;">
            <label class="label-title item T l" id="t_pin_status">PIN Status:</label>
            <span class="text nd T T_unknown" id="pin_status_unknown">Unknown</span>
            <span class="text nd T" id="pin_status_fail">Failed to connect script</span>
            <span class="text nd T" id="pin_status_ready">Ready</span>
            <span class="text nd T" id="pin_status_pin">PIN Locked</span>
            <span class="text nd T" id="pin_status_puk">PUK Locked</span>
            <span class="text nd T" id="pin_status_errror">Error Unknown</span>
        </div>

        <div class="nd" id="pin_unlock">
            <div class="inline">
                <b class="item L T l" id="t_pin_code">PIN Code:</b>
                <input id="pin_code" type="text" class="text" />
            </div>
            <div class="inline">
                <button type="submit" id="pinUnlockBtn" class="L T blue" value="Unlock"></button>
            </div>
        </div>

        <b class="item T T_isp3g l">Mobile ISP:</b>
        <select id="isp_sel" onchange="changeISP()" class="xxl"></select>


        <div class="part-separate">
        <input type="checkbox" id="manual_apn" />
        <label class="T_muanl_3g_apn">Set the Dial Number, APN, Username and Password manually</label>
        </div>

        <div id="setManual">
            <div>
                <b class="item T T_dialnum3g l">Dial Number:</b>
                <input id="dial_num" type="text" class="xl" />
            </div>

            <div>
                <b class="item l" id="t_apn">APN:</b>
                <input id="apn" type="text" class="xl" />
            </div>

            <div>
                <b class="item T T_username l">Username:</b>
                <input id="username" type="text" class="xl" />
                <span class="T T_optional">(optional)</span>
            </div>

            <div>
                <b class="item T T_passwd l">Password:</b>
                <input id="password" type="text" class="xl" />
                <span class="T T_optional">(optional)</span>
            </div>
        </div>

        <div id="conMode">
            <b class="T_connmode l">Connection Mode:</b>
            <select id="connectMode" class="xl">
                <option id="connAlwaysOn" class="T_typeauto" value="Always on">Always on</option>
                <option id="connOnDemand" class="T_typedemand" value="Connect on demand" selected>Connect on demand</option>
                <option id="connManual" class="T_typemanual" value="Connect manually">Connect manually</option>
            </select>
        </div>

        <div id="maxIdleTime">
            <b class="T T_midle l">Max Idle Time:</b>
            <input type="text" id="idle_time" class="xl" value="15" />
            <span class="T T_minutes">minutes</span>
            <span id="t_maa">(0 means always active.)</span>
        </div>

        <div>
            <b class="item T T_authtype l">Authentication Type:</b>
            <select id="ppp_authpro" class="xl">
                <option id="t_autoauth" value="AUTO_AUTH" selected>AUTO_AUTH</option>
                <option id="t_pap" value="PAP">PAP</option>
                <option id="t_chap" value="CHAP">CHAP</option>
            </select>
        </div>

        <div id="networkStat" class="part-separate">
            <button type="submit" id="connectBtn" class="blue inline T_conn">Connect</button>
            <button type="submit" id="disconnectBtn" class="blue inline T_disconn">Disconnect</button>
            <label class="L1" id="network_status"></label>
        </div>

        <div id="connectStat" class="pure-control-group" style="line-height: 30px;">
            <label class="label-title item T l" id="t_connStat">Connection Status:</label>
            <span id="connection_status" class="text"></span>
        </div>

        <div class="advanced-block nd" type="button" id="pppClick">
            <span class="advanced-icon advanced-hide-icon" id="advClick"></span>
            <span class="T_adv">Advanced</span>
        </div>

        <div id="ppp_elem_adv" class="nd">

            <div class="L1" id="p_chg_pin_en">
                <input type="checkbox" class="T" id="manual_pinCode" />
                <label class="item L T" id="t_pin_chg_en">Enable PIN code change</label>
            </div>

            <div id="p_old_pin">
                <b class="item T" id="t_old_pin">Old PIN Code:</b>
                <input id="old_pin" type="text" />
            </div>

            <div id="p_new_pin1">
                <b class="item T" id="t_new_pin1">New PIN Code:</b>
                <input id="new_pin1" type="text" />
            </div>

            <div id="p_new_pin2">
                <b class="item T" id="t_new_pin2">Confirm New PIN Code:</b>
                <input id="new_pin2" type="text" />
            </div>

            <div id="p_pinChangeBtn">
                <button type="submit" id="pinChangeBtn" class="blue T T_set">Set</button>
            </div>


            <div>
                <b class="item T l" id="t_mtu">MTU Size (in bytes):</b>
                <input id="mtu_size" type="text" class="m" maxlength="4" />
                <span class="T" id="t_mtu1480">(The default is 1480, do not change unless necessary)</span>
            </div>
 
            <div>
                <b class="item T T_echo l">Echo Request Interval:</b>
                <input type="text" id="ppp_echotime" class="m" value="30" maxlength="3" />
                <span class="T T_echoinfo">(0-120 seconds, 0 means no request)</span>
            </div>

            <div>
                <input type="checkbox" class="T" id="manual_ipAddr" />
                <label class="T" id="t_follow_ip">Use The Following IP Address</label>
            </div>

            <div id="static_ip_div">
                <b class="item T l" id="t_static_ip">Static IP Address:</b>
                <input id="static_ip" type="text" value="0.0.0.0" />
            </div>

            <div>
                <input type="checkbox" class="T" id="manual_dns" />
                <label class="T" id="t_follow_dns">Use The Following DNS Servers</label>
            </div>

            <div id="primary_dns_div">
                <b class="item T l" id="t_pri_dns">Primary DNS:</b>
                <input id="dns1" type="text" value="0.0.0.0" />
            </div>

            <div id="secondary_dns_div">
                <b class="item T l" id="t_sec_dns">Secondary DNS:</b>
                <input id="dns2" type="text" value="0.0.0.0" />
                <span class="T T_optional">(optional)</span>
            </div>
        </div>

        <div class="part-separate">
            <div class='modemSettings inline'></div>
            <span class="inline" id="modem_set_Btn" style="color:#F93;border-bottom:#F93 solid 1px;cursor:pointer;vertical-align:baseline" />Modem Settings</span>
        </div>
        <div style="text-align:right">
            <button type="submit" class="green inline T_save" id="saveBtn">Save</button>
        </div>
    </form>
</div>

<script type="text/javascript">
var pWlanStk, pWlan5GStk, basicList;
$(document).ready(function() {
    $.tpInit(init);
});
</script>
