<script language="javascript" type="text/javascript">
function initEditPPPoE() {
    var wan_ppplist = $.wd.conn[$.wd.editIndex].obj;
    $("#username").val(wan_ppplist.username);
    $("#pwd").val(wan_ppplist.password);
    $("#pwd2").val(wan_ppplist.password);

    if (INCLUDE_SPECIAL_DIAL_MODE) {
        $("#speDail").val(wan_ppplist.X_TP_SpecialDail);
    }

    if (wan_ppplist.connectionTrigger == "OnDemand") {
        $("#connOnDemand").prop("checked", true);
        $("#idleTime").val(wan_ppplist.idleDisconnectTime);
    } else if (wan_ppplist.connectionTrigger == "AlwaysOn") {
        $("#connAlwaysOn").prop("checked", true);
        if (INCLUDE_PPP_RECONN) {
            $("#reconTimeStr").removeClass("nd");
            $("#reconTime").val(wan_ppplist.X_TP_ReconTime);
            $("#reconEnable").prop("checked", (wan_ppplist.X_TP_ReconEnable == 1)? true:false);
            $("#reconEnable").tpCheckbox();
            autoConnEnableCheck();
        }
    } else if (wan_ppplist.connectionTrigger == "Manual") {
        $("#connManual").prop("checked", true);
        $("#idleTime").val(wan_ppplist.idleDisconnectTime);
    }

    $("#ppp_authpro option[value='" + wan_ppplist.PPPAuthenticationProtocol + "']").prop("selected", "selected");
    $("#acName").val(wan_ppplist.PPPoEACName);
    $("#serviceName").val(wan_ppplist.PPPoEServiceName);
    $("#pppmtu").val(wan_ppplist.maxMRUSize);
    $("#ppp_fullnat_en").prop("checked", (wan_ppplist.X_TP_FullconeNATEnabled == 1) ? true : false);
    $("#ppp_spi_en").prop("checked", (wan_ppplist.X_TP_FirewallEnabled == 1) ? true : false);
    $("#ppp_igmp_en").prop("checked", (wan_ppplist.X_TP_IGMPProxyEnabled == 1) ? true : false);

    if (wan_ppplist.X_TP_UseStaticIP == 1) {
        $("#externIp_en").prop("checked", true);
        $("#exIp_tbl").removeClass("nd");
        $("#externIpAddr").val(wan_ppplist.externalIPAddress);
    } else {
        $("#externIp_en").prop("checked", false);
        $("#exIp_tbl").addClass("nd");
    }
    $("#ppp_echotime").val(wan_ppplist.PPPLCPEcho ? wan_ppplist.PPPLCPEcho : 0);
    if (wan_ppplist.DNSOverrideAllowed == 1) {
        $("#dns_en").prop("checked", true);
        $("#dns_tbl").removeClass("nd");
        $("#dns1").val((wan_ppplist.DNSServers.split(",")[0]) ? wan_ppplist.DNSServers.split(",")[0] : "0.0.0.0");
        $("#dns2").val((wan_ppplist.DNSServers.split(",")[1]) ? wan_ppplist.DNSServers.split(",")[1] : "0.0.0.0");
    } else {
        $("#dns_en").prop("checked", false);
        $("#dns_tbl").addClass("nd");
    }

    if (INCLUDE_IPV6) {
        $("#pppoe_enable_v4").prop("checked", (wan_ppplist.X_TP_IPv4Enabled == 1) ? true : false);
        enablePPPoEIPv4((wan_ppplist.X_TP_IPv4Enabled == 1) ? true : false);

        $("#pppoe_enable_v6").prop("checked", (wan_ppplist.X_TP_IPv6Enabled == 1) ? true : false);
        enablePPPoEIPv6((wan_ppplist.X_TP_IPv6Enabled == 1) ? true : false);

        $("#externIp6_en").prop("checked", (wan_ppplist.X_TP_IPv6AddressingType == "Static") ? true : false);
        if (wan_ppplist.X_TP_IPv6AddressingType == "Static") {
            $("#exIp6_tbl").removeClass("nd");
        }
        else {
            $("#exIp6_tbl").addClass("nd");
        }

        $("#dns6_en").prop("checked", (wan_ppplist.X_TP_IPv6DNSOverrideAllowed == 1) ? true : false);
        if (wan_ppplist.X_TP_IPv6DNSOverrideAllowed == 1) {
            $("#dns6_tbl").removeClass("nd");
        }
        else {
            $("#dns6_tbl").addClass("nd");
        }

        if (wan_ppplist.X_TP_IPv6AddressingType == "Static") {
            $("#externIp6Addr").val(wan_ppplist.X_TP_ExternalIPv6Address);
            $("#externIp6Gateway").val(wan_ppplist.X_TP_DefaultIPv6Gateway);
        }

        if (wan_ppplist.X_TP_IPv6DNSOverrideAllowed == 1) {
            $("#dns6_1").val((wan_ppplist.X_TP_IPv6DNSServers.split(",")[0]) ? wan_ppplist.X_TP_IPv6DNSServers.split(",")[0] : "::");
            $("#dns6_2").val((wan_ppplist.X_TP_IPv6DNSServers.split(",")[1]) ? wan_ppplist.X_TP_IPv6DNSServers.split(",")[1] : "::");
        }

        if (INCLUDE_IPV6_SLAAC) {
            var tmpOpt = (wan_ppplist.X_TP_IPv6AddressingType != "SLAAC") ? "dhcpv6" : "slaac";
            $("#pppoe_ip6_addr_type_opt option[value='"+ tmpOpt +"']").prop("selected", "selected");
        }

        if (INCLUDE_IPV6_MLD) {
            $("#ppp_mld_en").prop("checked", (wan_ppplist.X_TP_MLDProxyEnabled == 1) ? 1 : 0);
        }
    }
}

function initPPPoE() {
    showPPPoE();

    if ($.wd.conn[$.wd.editIndex].type == "pppoe") {
        initEditPPPoE();
    }

    dftGtw = $("#defaut_gateway_pppoe");
    if (INCLUDE_IPV6) {
        dftGtw6 = $("#default_gateway_pppoe6");
    }
    initDefaultGwDNS();
    $("#divMacClone").removeClass("nd");
}

function showPPPoE() {
    if (INCLUDE_IPV6) {
        showIPv6();

        $("#pppoe_enable_v4").prop("checked", true);

        $("#pppoe_enable_v6").prop("checked", false);
    }

    $("#pppoe_elem_basic").removeClass("nd");
    $("#pppoeClick").removeClass("nd");
    $("#pppoeClick").removeClass("cln");
    $("#pppoe_elem_adv").addClass("nd");
}

function enablePPPoEIPv4(flag) {
    if (flag) {
        $("#pppoe_basic_v4").removeClass("nd");
        $("#pppoe_adv_v4").removeClass("nd");
        $("#connOnDemand").prop("disabled", false).data("tpRadio").refresh();
        $("#connManual").prop("disabled", false).data("tpRadio").refresh();
    } else {
        $("#pppoe_basic_v4").addClass("nd");
        $("#pppoe_adv_v4").addClass("nd");

        $("#connAlwaysOn").prop("checked", true).data("tpRadio").refresh();
        $("#connOnDemand").prop("disabled", true).data("tpRadio").refresh();
        $("#connManual").prop("disabled", true).data("tpRadio").refresh();
    }
}
$("#pppoe_enable_v4").click(function() {
    var flag = $("#pppoe_enable_v4").prop("data-checked") ? true : false;
    enablePPPoEIPv4(flag);
});

function enablePPPoEIPv6(flag) {
    if (flag) {
        $("#pppoe_basic_v6").removeClass("nd");
        $("#pppoe_adv_v6").removeClass("nd");

        if (!$("#pppoe_enable_v4").prop("data-checked")) {
            $("#connAlwaysOn").prop("checked", true);
            $("#connOnDemand").prop("disabled", true);
            $("#connManual").prop("disabled", true);
        }
    } else {
        $("#pppoe_basic_v6").addClass("nd");
        $("#pppoe_adv_v6").addClass("nd");

        if ($("#pppoe_enable_v4").prop("data-checked")) {
            $("#connOnDemand").prop("disabled", false);
            $("#connManual").prop("disabled", false);
        }
    }

    if (INCLUDE_IPV6_SLAAC)
        $("#pppoe_ip6_addr_type").removeClass("nd");
    else
        $("#pppoe_ip6_addr_type").addClass("nd");


    if (INCLUDE_IPV6_MLD)
        $("#pppoe_mld").removeClass("nd");
    else
        $("#pppoe_mld").addClass("nd");
}

$("#pppoe_enable_v6").click(function() {
    var flag = $("#pppoe_enable_v6").prop("data-checked") ? true : false;
    enablePPPoEIPv6(flag);
});

function PPPoEClick(obj) {
    if ($(obj).hasClass("cln")) {
        $("#pppoe_elem_adv").addClass("nd");
        $(obj).removeClass("cln");
    } else {
        $("#pppoe_elem_adv").removeClass("nd");
        $(obj).addClass("cln");
    }
}

function showDiv(val) {
    switch (val) {
        case "externIp_en":
            if ($("#externIp_en").prop("data-checked"))
                $("#exIp_tbl").removeClass("nd");
            else
                $("#exIp_tbl").addClass("nd");
            break;
        case "dns_en":
            if ($("#dns_en").prop("data-checked"))
                $("#dns_tbl").removeClass("nd");
            else
                $("#dns_tbl").addClass("nd");
            break;
        case "externIp6_en":
            if (INCLUDE_IPV6) {
                if ($("#externIp6_en").prop("data-checked")) {
                    $("#exIp6_tbl").removeClass("nd");
                    if (INCLUDE_IPV6_SLAAC) {
                        $("#pppoe_ip6_addr_type_opt").prop("disabled", true);
                    }
                } else {
                    $("#exIp6_tbl").addClass("nd");
                    if (INCLUDE_IPV6_SLAAC) {
                        $("#pppoe_ip6_addr_type_opt").prop("disabled", false);
                    }
                }
            }
            break;
        case "dns6_en":
            if (INCLUDE_IPV6) {
                if ($("#dns6_en").prop("data-checked"))
                    $("#dns6_tbl").removeClass("nd");
                else
                    $("#dns6_tbl").addClass("nd");

            }
            break;
        default:
            ;
    }
}

function addPPPoEAttrs() {
    var element;
    wanArg.enable = 1;
    wanArg.username = $("#username").val();
    if (wanArg.username == "") {
        $.alert(ERR_USERNAME_INVAD);
        $("#username").focus().select();
        return false;
    }


    if (INCLUDE_SPECIAL_DIAL_MODE) {
        wanArg.X_TP_SpecialDail = $("#speDail").val();
    }

    if ($("#pwd").val() != $("#pwd2").val()) {
        $("#pwd").val("");
        $("#pwd2").val("");
        $.alert(ERR_PWD_INVAD);
        $("#pwd").focus().select();
        return false;
    }

    wanArg.password = $("#pwd").val();

    if ($("#connAlwaysOn").prop("checked")) {
        wanArg.connectionTrigger = "AlwaysOn";
        if (INCLUDE_PPP_RECONN) {
            if($("#reconEnable").prop("data-checked")) {
                wanArg.X_TP_ReconTime = $("#reconTime").val();
                wanArg.X_TP_ReconEnable = 1;
            }
            else {
                wanArg.X_TP_ReconTime = "00:00";
                wanArg.X_TP_ReconEnable = 0;
            }
            if(wanArg.X_TP_ReconEnable == 1 && wanArg.X_TP_ReconTime == "") {
                $.alert(ERR_WAN_RECONTIME_EMPTY);
                return false;
            }
            if(wanArg.X_TP_ReconEnable == 1 && !$.isTimeVaild(wanArg.X_TP_ReconTime)) {
                $.alert(ERR_WAN_RECONTIME_INVALID);
                return false;
            }
        }
    } else {
        if (($("#idleTime").val()) && ($.isnum($("#idleTime").val()))) {
            wanArg.idleDisconnectTime = parseInt($("#idleTime").val(), 10);
        } else {
            $.alert(ERR_IDLETIME_INVAD);
            $("#idleTime").focus().select();
            return false;
        }

        if ($("#connOnDemand").prop("checked"))
            wanArg.connectionTrigger = "OnDemand";
        else if ($("#connManual").prop("checked"))
            wanArg.connectionTrigger = "Manual";

        if (INCLUDE_PPP_RECONN) {
            wanArg.X_TP_ReconTime = "00:00";
            wanArg.X_TP_ReconEnable = 0;
        }
    }

    wanArg.PPPAuthenticationProtocol = $("#ppp_authpro").data("value");
    wanArg.PPPoEACName = $("#acName").val();
    wanArg.PPPoEServiceName = $("#serviceName").val();

    wanArg.maxMRUSize = $("#pppmtu").val();
    if ((wanArg.maxMRUSize >= 576) && (wanArg.maxMRUSize <= 1492)) {
        wanArg.maxMRUSize = parseInt(wanArg.maxMRUSize, 10);
    } else {
        $.alert(ERR_WAN_PPPOE_MTU_INVAD);
        $("#pppmtu").focus().select();
        return false;
    }
    wanArg.NATEnabled = 1;
    wanArg.connectionType = "IP_Routed";
    wanArg.transportType = "PPPoE";
    wanArg.X_TP_FullconeNATEnabled = ($("#ppp_fullnat_en").prop("data-checked")) ? 1 : 0;
    wanArg.X_TP_FirewallEnabled = ($("#ppp_spi_en").prop("data-checked")) ? 1 : 0;
    wanArg.X_TP_IGMPProxyEnabled = ($("#ppp_igmp_en").prop("data-checked")) ? 1 : 0;
    if ($("#externIp_en").prop("data-checked") && (!INCLUDE_IPV6 || $("#pppoe_enable_v4").prop("data-checked"))) {
        if (($("#externIpAddr").val() != "") && ($("#externIpAddr").val() != "0.0.0.0") && ($.ifip($("#externIpAddr").val(), true))) {
            $.alert(ERR_IP_FORMAT);
            $("#externIpAddr").focus().select();
            return false;
        }
        wanArg.externalIPAddress = ($("#externIpAddr").val()) ? $.ip2ip($("#externIpAddr").val()) : "0.0.0.0";
        wanArg.X_TP_UseStaticIP = 1;
    } else if (!$("#externIp_en").prop("data-checked")) {
        if ($.wd.conn[$.wd.editIndex].type == null) {
            wanArg.externalIPAddress = "0.0.0.0";
        }
        wanArg.X_TP_UseStaticIP = 0;
    }
    if ((parseInt($("#ppp_echotime").val(), 10) >= 0) && (parseInt($("#ppp_echotime").val(), 10) <= 120)) {
        wanArg.PPPLCPEcho = parseInt($("#ppp_echotime").val(), 10);
    } else {
        $.alert(ERR_WAN_ECHOTIME_INVAD);
        $("#ppp_echotime").focus().select();
        return false;
    }
    if ($("#dns_en").prop("data-checked") && (!INCLUDE_IPV6 || $("#pppoe_enable_v4").prop("data-checked"))) {
        if (($("#dns1").val() != "") && ($("#dns1").val() != "0.0.0.0") && ($.ifip($("#dns1").val(), true))) {
            $.alert(ERR_WAN_DNSADDR_INVAD);
            $("#dns1").focus().select();
            return false;
        }
        if (($("#dns2").val() != "") && ($("#dns2").val() != "0.0.0.0") && ($.ifip($("#dns2").val(), true))) {
            $.alert(ERR_WAN_SECDNS_INVAD);
            $("#dns2").focus().select();
            return false;
        }
        var tmpDns1 = ($("#dns1").val()) ? $.ip2ip($("#dns1").val()) : "0.0.0.0";
        var tmpDns2 = ($("#dns2").val()) ? $.ip2ip($("#dns2").val()) : "0.0.0.0";
        wanArg.DNSOverrideAllowed = 1;
        wanArg.DNSServers = tmpDns1 + "," + tmpDns2;
    } else {
        wanArg.DNSOverrideAllowed = 0;
        if ($.wd.conn[$.wd.editIndex].type == null) {
            wanArg.DNSServers = "0.0.0.0,0.0.0.0";
        }
    }

    if ($.wd.conn[$.wd.editIndex].type == "pppoe") {
        $.wd.l3ForwardingObj.__ifAliasName = dftGtw.data("text");
    }

    if (INCLUDE_IPV6) {
        wanArg.X_TP_IPv4Enabled = ($("#pppoe_enable_v4").prop("data-checked")) ? 1 : 0;
        wanArg.X_TP_IPv6Enabled = ($("#pppoe_enable_v6").prop("data-checked")) ? 1 : 0;

        if (wanArg.X_TP_IPv4Enabled == 0 && wanArg.X_TP_IPv6Enabled == 0) {
            $.alert(ERR_WAN6_IP_STACK_NONE);
            return false;
        }

        if (wanArg.X_TP_IPv6Enabled == 1 && $("#externIp6_en").prop("data-checked")) {
            if (!$.isValidGLUIP6AddrStrict($("#externIp6Addr").val())) {
                $.alert(ERR_WAN6_ADDR_INVAD);
                $("#externIp6Addr").focus().select();
                return false;
            }

            var tmp_ip6Gateway = $("#externIp6Gateway").val();
            if (tmp_ip6Gateway != "" && tmp_ip6Gateway != "::" && !$.isValidGLUIP6AddrStrict(tmp_ip6Gateway)) {
                $.alert(ERR_WAN6_ADDR_INVAD);
                $("#externIp6Gateway").focus().select();
                return false;
            }

            wanArg.X_TP_IPv6AddressingType = "Static";
            wanArg.X_TP_ExternalIPv6Address = $("#externIp6Addr").val();
            wanArg.X_TP_PrefixLength = 64;
            wanArg.X_TP_DefaultIPv6Gateway = (tmp_ip6Gateway) ? tmp_ip6Gateway : "::";
            wanArg.X_TP_DefaultIPv6GatewayOverride = (wanArg.X_TP_DefaultIPv6Gateway != "::") ? 1 : 0;
        } else {
            wanArg.X_TP_IPv6AddressingType = "DHCPv6";

            if (INCLUDE_IPV6_SLAAC) {
                if ($("#pppoe_ip6_addr_type_opt").data("value") == "slaac") {
                    wanArg.X_TP_IPv6AddressingType = "SLAAC";
                }
            }

            if ($.wd.conn[$.wd.editIndex].type == null) {
                wanArg.X_TP_ExternalIPv6Address = "::";
                wanArg.X_TP_PrefixLength = 0;
                wanArg.X_TP_DefaultIPv6Gateway = "::";
            }
        }

        if (INCLUDE_IPV6_MLD) {
            wanArg.X_TP_MLDProxyEnabled = $("#ppp_mld_en").prop("data-checked") ? 1 : 0;
        }

        if (wanArg.X_TP_IPv6Enabled == 1 && $("#dns6_en").prop("data-checked")) {
            var tmpDns1 = $("#dns6_1").val();
            var tmpDns2 = $("#dns6_2").val();

            if (tmpDns1 != "" && tmpDns1 != "::" && !$.isValidGLUIP6AddrStrict(tmpDns1)) {
                $.alert(ERR_WAN6_ADDR_INVAD);
                $("#dns6_1").focus().select();
                return false;
            }

            if (tmpDns2 != "" && tmpDns2 != "::" && !$.isValidGLUIP6AddrStrict(tmpDns2)) {
                $.alert(ERR_WAN6_ADDR_INVAD);
                $("#dns6_2").focus().select();
                return false;
            }

            tmpDns1 = (tmpDns1) ? tmpDns1 : "::";
            tmpDns2 = (tmpDns2) ? tmpDns2 : "::";

            if ((tmpDns1 + "," + tmpDns2) == "::,::") {
                $.alert(ERR_WAN6_DNS_INVAD);
                $("#dns6_1").focus().select();
                return false;
            }

            wanArg.X_TP_IPv6DNSOverrideAllowed = 1;
            wanArg.X_TP_IPv6DNSServers = tmpDns1 + "," + tmpDns2;
        } else {
            wanArg.X_TP_IPv6DNSOverrideAllowed = 0;
            if ($.wd.conn[$.wd.editIndex].type == null) {
                wanArg.X_TP_IPv6DNSServers = "::,::";
            }
        }

        if ($.wd.conn[$.wd.editIndex].type == "pppoe") {
            $.wd.l3Ip6ForwardingObj.__ifAliasName = dftGtw6.data("text");
        }
    }

    return true;
}

function checkPwd(val) {
    if (val == "pppoe") {
        if ($("#pwd2").val() != $("#pwd").val()) {
            $("#pwd").val("");
            $("#pwd2").val("");
            $.alert(ERR_PWD_INVAD);
            $("#pwd").focus().select();
            return;
        }
    }
}

function autoConnEnableCheck() { 
    if($("#reconEnable").prop("data-checked")) {
        $("#reconTime").prop("disabled", false);
    }
    else {
        $("#reconTime").prop("disabled", true);
    }
}

function WANChkIdleTimeT() {
    if (INCLUDE_PPP_RECONN) {
        if($("#connAlwaysOn").prop("checked")) {
            $("#reconTimeStr").removeClass("nd");
        }
        else {
            $("#reconTimeStr").addClass("nd");
        }
    }
}

</script>

<div id="pppoe_elem_basic">
    <div><b class="T_pppusr">PPP Username:</b>
        <input type="text" id="username" maxlength="255" />
    </div>
    <div><b class="T_ppppwd">PPP Password:</b>
        <input type="password" id="pwd" maxlength="255" />
    </div>
    <div><b class="T_cfmpwd">Confirm Password:</b>
        <input type="password" id="pwd2" maxlength="255" onchange="checkPwd('pppoe');" />
    </div>
    <div class="nd"><b id="t_speDial">Special Dial:</b>
        <select id="speDail" onchange="">
            <option id="dail0" value=0 selected="selected">Normal dial mode</option>
            <option id="dail1" value=1>Special dial mode 1</option>
            <option id="dail2" value=2>Special dial mode 2</option>
            <option id="dail3" value=3>Special dial mode 3</option>
            <option id="dail4" value=4>Special dial mode 4</option>
            <option id="dail5" value=5>Special dial mode 5</option>
            <option id="dail6" value=6>Special dial mode 6</option>
            <option id="dail7" value=7>Special dial mode 7</option>
        </select>
    </div>
    <div><b class="T_connmode">Connection Mode:</b>
        <input type="radio" name="linkMode" id="connAlwaysOn" checked="checked" onClick="WANChkIdleTimeT()"/>
        <label class="T_typeauto">Always on</label>
    </div>
    <div id="reconTimeStr" class="nd">
        <b>&nbsp;</b>
        <input type="checkbox" id="reconEnable" onclick="autoConnEnableCheck()" />
        <label class="T_reconset">Auto disconnect and reconnect at(HH:MM)</label>
        <input type="text" id="reconTime" size="5" maxlength="5" disabled="disabled" value="00:00"/>
    </div>

    <div><b>&nbsp;</b>
        <input type="radio" name="linkMode" id="connOnDemand" onClick="WANChkIdleTimeT()" />
        <label class="T_typedemand">Connect on demand</label>
    </div>
    <div><b>&nbsp;</b>
        <input type="radio" name="linkMode" id="connManual" onClick="WANChkIdleTimeT()" />
        <label class="T_typemanual">Connect manually</label>
    </div>
    <div><b>&nbsp;</b>
        <span class="T_midle">Max Idle Time:</span>
        <input type="text" id="idleTime" size="5" maxlength="2" value="15" />
        <span class="T_minutes">minutes</span>     
    </div>
    <div class="pure-control-group">
        <label class="label-title"></label>
        <span class="text T_zmean">(0 means remain active at all time)</span>
    </div>
    <b class="T_authtype">Authentication Method:</b>
    <select id="ppp_authpro" class="l">
        <option id="auto_auth" value="AUTO_AUTH" selected="selected">AUTO_AUTH</option>
        <option id="pap" value="PAP">PAP</option>
        <option id="chap" value="CHAP">CHAP</option>
        <option id="ms-chap" value="MS-CHAP">MS-CHAP</option>
    </select>

    <div class="IPv6 nd"><b>IPv4:</b>
        <input type="checkbox" id="pppoe_enable_v4" />
        <label class="T_enable"></label>
    </div>
    <div id="pppoe_basic_v4">
        <b class="T_defgw">Default Gateway:</b>
        <select id="defaut_gateway_pppoe" class="l"></select>
    </div>

    <div class="IPv6 nd"><b>IPv6:</b>
        <input type="checkbox" id="pppoe_enable_v6" />
        <label class="T_enable"></label>
    </div>
    <div id="pppoe_basic_v6" class="nd">
        <div id="pppoe_ip6_addr_type">
            <p class="IPv6 nd"><b class="T_ip6addrconf">Addressing Type:</b>
                <select id="pppoe_ip6_addr_type_opt" class="l">
                    <option value="dhcpv6" selected="selected">DHCPv6</option>
                    <option value="slaac">SLAAC</option>
                </select>
            </p>
        </div>
        <p class="IPv6 nd"><b class="T_ip6defgw">IPv6 Default Gateway:</b>
            <select id="default_gateway_pppoe6" class="l"></select>
        </p>
    </div>
</div>

<div class="advanced-block">
    <span class="advanced-icon advanced-hide-icon" id="pppoeClick" onclick="PPPoEClick(this)"></span>
    <span class="T_adv">Advanced</span>
</div>

<div id="pppoe_elem_adv" class="nd">
    <div><b class="T_srvname">Service Name:</b>
        <input type="text" id="serviceName" maxlength="31" />&nbsp;(<span class="T_nochg">do not change unless necessary</span>)</div>
    <div><b class="T_acname">Server Name:</b>
        <input type="text" id="acName" maxlength="31" />&nbsp;(<span class="T_nochg">do not change unless necessary</span>)</div>
    <div><b class="T_mtuSize">MTU Size:</b>
        <input type="text" id="pppmtu" size="5" maxlength="4" value="1480" />&nbsp;<span class="T_bytes">bytes.</span>(<span class="T_mtu1480">The default is 1480</span>,
        <span class="T_nochg">do not change unless necessary.</span>)</div>
    <div id="pppoe_adv_v4">
        <div><b class="T_enfullcone">Enable Fullcone NAT</b>
            <input type="checkbox" id="ppp_fullnat_en" />
            <label class="T_enable"></label>
        </div>
        <div><b class="T_enspi">Enable SPI Firewall</b>
            <input type="checkbox" id="ppp_spi_en" checked="true" />
            <label class="T_enable"></label>
        </div>
        <div><b class="T_enigmp">Enable IGMP Proxy</b>
            <input type="checkbox" id="ppp_igmp_en" checked="true" />
            <label class="T_enable"></label>
        </div>
        <div><b class="T_useispaddr">Use IP address specified by ISP</b>
            <input type="checkbox" id="externIp_en" onclick="showDiv('externIp_en');" />
            <label class="T_enable"></label>
        </div>
        <div id="exIp_tbl" class="nd">
            <b class="T_ispaddr">ISP specified IP Address:</b>
            <input type="text" value="0.0.0.0" id="externIpAddr" />
        </div>
        <div><b class="item T_echo">Echo request interval:</b>
            <input type="text" size="5" id="ppp_echotime" maxlength="3" value="30" />
            <span class="T_echoinfo">(0~120 seconds, 0 means no request)</span>
        </div>
        <div><b class="T_dnsmanual">DNS:</b>
            <input type="checkbox" id="dns_en" onclick="showDiv('dns_en');" />
            <label class="T_enable"></label>
        </div>
        <div id="dns_tbl" class="nd">
            <div><b class="T_dns">DNS server:</b>
                <input type="text" value="0.0.0.0" id="dns1" />
            </div>
            <div><b class="T_secdns">Secondary DNS Server:</b>
                <input type="text" value="0.0.0.0" id="dns2" />
            </div>
        </div>
    </div>
    <div id="pppoe_adv_v6" class="nd">
        <div id="pppoe_mld">
            <div class="IPv6 nd"><b class="T_enmld">MLD Proxy:</b>
                <input type="checkbox" id="ppp_mld_en" checked="true" />
                <label class="T_enable">&nbsp;</label>
            </div>
        </div>
        <div class="IPv6 nd"><b class="T_ip6useispaddr">IPv6 address</b>
            <input type="checkbox" id="externIp6_en" onclick="showDiv('externIp6_en');" />
            <label class="T_enable"></label>
        </div>
        <div id="exIp6_tbl" class="nd">
            <div class="IPv6 nd"><b class="T_ip6ispaddr">ISP specified IPv6 Address:</b>
                <input type="text" value="::" id="externIp6Addr" />
            </div>
            <div class="IPv6 nd"><b class="T_ip6ispgw">ISP specified IPv6 Gateway:</b>
                <input type="text" value="::" id="externIp6Gateway" />
            </div>
        </div>
        <div class="IPv6 nd"><b class="T_ip6dnsmanual">IPv6 DNS Server</b>
            <input type="checkbox" id="dns6_en" onclick="showDiv('dns6_en');" />
            <label class="T_enable"></label>
        </div>
        <div id="dns6_tbl" class="nd">
            <div class="IPv6 nd"><b class="T_ip6dns">IPv6 DNS Server:</b>
                <input type="text" value="::" id="dns6_1" />
            </div>
            <div class="IPv6 nd"><b class="T_ip6secdns">Secondary IPv6 DNS Server:</b>
                <input type="text" value="::" id="dns6_2" />
            </div>
        </div>
    </div>
</div>

<script language="JavaScript" type="text/javascript">
$.tpInit(initPPPoE);
</script>
