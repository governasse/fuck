<script type="text/javascript" language="javascript">
function goPrev() {
    if (flowSteps[currIndex].file != "qsEth.htm"){
        return ;
    }

    var ret = doSave(false);
    if (ret == false) {
        return;
    }

    $.qf.prev();
}

function goNext() {
    if (flowSteps[currIndex].file != "qsEth.htm"){
        return ;
    }

    var ret = doSave(true);
    if (ret == false) {
        return;
    }
    
    $.qf.next();
}

function init() {
    showLinkType();
    switch ($.qd.eth.connectionType) {
        case "PPPoE":
            initParam($.qd.eth.pppoe);
            break;
        case "StaticIp":
            initParam($.qd.eth.staticIp);
            break;
        case "DynamicIp":
            initParam($.qd.eth.dynamicIp);
            break;
        case "Pptp":
            initParam($.qd.eth.pptp);
            break;
        case "L2tp":
            initParam($.qd.eth.l2tp);
            break;
        default:
            break;
    }
}

function initParam(wanParam) {
    var type = wanParam.linkType;
    switch (type) {
        case "PPPoE":
            $("#usr" + type).val(wanParam.usr);
            $("#pwd" + type).val(wanParam.pwd);
            break;
        case "StaticIp":
            $("#ip" + type).val(wanParam.ip);
            $("#mask" + type).val(wanParam.mask);
            $("#gw" + type).val(wanParam.gw ? wanParam.gw : "0.0.0.0");
            $("#priDns" + type).val(wanParam.dns ? wanParam.dns : "0.0.0.0");
            $("#secDns" + type).val(wanParam.dns2 ? wanParam.dns2 : "0.0.0.0");
            break;
        case "Pptp":
        case "L2tp":
            $("#usr" + type).val(wanParam.usr);
            $("#pwd" + type).val(wanParam.pwd);
            $("#serverIpOrName" + type).val(wanParam.srvAddrName);
            if (wanParam.addressingType == "DHCP") {
                $("#dnsModeDyn" + type).prop("checked", true);
                $("#dnsModeParamSta" + type).fadeOut("fast");
            } else {
                $("#dnsModeSta" + type).prop("checked", true);
                $("#dnsModeParamSta" + type).fadeIn("normal");
                $("#ip" + type).val(wanParam.ip ? wanParam.ip : "0.0.0.0");
                $("#mask" + type).val(wanParam.mask ? wanParam.mask : "0.0.0.0");
                $("#gw" + type).val(wanParam.gw ? wanParam.gw : "0.0.0.0");
                $("#priDns" + type).val(wanParam.dns ? wanParam.dns : "0.0.0.0");
                $("#secDns" + type).val(wanParam.dns2 ? wanParam.dns2 : "0.0.0.0");
            }
            break;
        case "DynamicIp":
            initMacClone(wanParam);
            break;
        default:
            break;
    }

    $("input[id^='dnsMode']").click(function() {
        var type = ($(this).attr("id").search("Pptp") != -1) ? "Pptp" : "L2tp";

        if ($(this).attr("id").search("dnsModeDyn") != -1) {
            $("#dnsModeParamSta" + type).fadeOut("fast");
        } else {
            $("#dnsModeParamSta" + type).fadeIn("normal");
        }
    });
}

function showLinkType() {
    $("#div" + $.qd.eth.connectionType).show();
}

function doSave(checkValid) {
    var linkType = $.qd.eth.connectionType;
    var wanConnArg = {};
    switch (linkType) {
        case "PPPoE":
            wanConnArg = addAttrsPPP(linkType, checkValid);
            if (wanConnArg == null) return false;
            transData(wanConnArg, $.qd.eth.pppoe);
            break;
        case "StaticIp":
            wanConnArg = addAttrsStaIp(linkType, checkValid);
            if (wanConnArg == null) return false; 
            transData(wanConnArg, $.qd.eth.staticIp);
            break;
        case "Pptp":
            wanConnArg = addAttrsPptpL2tp(linkType, checkValid);
            if (wanConnArg == null) return false;
            transData(wanConnArg, $.qd.eth.pptp);
            break;
        case "L2tp":
            wanConnArg = addAttrsPptpL2tp(linkType, checkValid);
            if (wanConnArg == null) return false;
            transData(wanConnArg, $.qd.eth.l2tp);
            break;
        case "DynamicIp":
            wanConnArg = addAttrsDynIp(linkType, checkValid);
            if (wanConnArg == null) return false;
            transData(wanConnArg, $.qd.eth.dynamicIp);
            break;
        default:
            break;
    }

    if (wanConnArg == null) {
        return false;
    }

    $.qd.eth.wanConnArg = wanConnArg;

    return true;
}

function addAttrsPPP(type, checkValid) {
    var wanArg = {
        enable: 1,
        transportType: type,
        username: $("#usr" + type).val(),
        password: $("#pwd" + type).val()
    };

    if ($.qd.eth.pppoe.secondConnection == "None"){
        wanArg.X_TP_SecondConnection = "StaticIP";
        wanArg.X_TP_SecondConnectionIPAddress = $.ip2ip("169.254.1.1");
        wanArg.X_TP_SecondConnectionSubnetMask = $.ip2ip("255.255.255.255");
    }

    if (wanArg.username == "" && checkValid == true) {
        $.alert(ERR_USERNAME_INVAD);
        $("#usr" + type).focus().select();
        return null;
    }
    return wanArg;
}

function addAttrsDynIp(type, checkValid) {
    var defaultHostname = $.getDefaultHostname();
    var wanArg = {
        enable: 1,
        connectionType: "IP_Routed",
        addressingType: "DHCP",
        NATEnabled: 1,
        X_TP_Hostname: defaultHostname
    }
    /* macclone */
    if (false == addMacCloneAttrs(wanArg)) {
        return null;
    }
    return wanArg;
}

function addAttrsStaIp(type, checkValid) {
    var temp_ip = $("#ip" + type).val();
    var temp_mask = $("#mask" + type).val();
    var temp_gateway = $("#gw" + type).val();
    if (checkValid == true && $.ifip(temp_ip)) {
        $("#ip" + type).focus().select();
        return null;
    }
    if (checkValid == true && $.mask(temp_mask)) {
        $("#mask" + type).focus().select();
        return null;
    }
    if (checkValid == true && $.ipmask(temp_ip, temp_mask)) {
        $("#mask" + type).focus().select();
        return null;
    }

    if (checkValid == true && ((temp_gateway == "") || (temp_gateway != "0.0.0.0") && ($.ifip(temp_gateway, true)))) {
        $.alert(ERR_IP_FORMAT);
        $("#gw" + type).focus().select();
        return null;
    }

    if ( checkValid == true && ((temp_gateway == "") || (temp_gateway == "0.0.0.0"))){
        $.alert(ERR_GATEWAY_INVAD);
        $("#gw" + type).focus().select();
        return null;
    }

    if (!INCLUDE_DEFAULT_GATEWAY_HOST){
    if (checkValid == true && (temp_gateway != "") && (temp_gateway != "0.0.0.0") && (!$.isSameLan(temp_gateway, temp_mask, temp_ip, temp_mask))) {
         $.alert(ERR_GATEWAY_INVAD);
        $("#gw" + type).focus().select();
        return null;
    }
    }

    var temp_dnsaddr = $("#priDns" + type).val();
    var temp_secdnsaddr = $("#secDns" + type).val();
    var temp_dnsServers = "";
    if (checkValid == true && ((temp_dnsaddr == "") || (temp_dnsaddr == "0.0.0.0"))){
        $.alert(ERR_STAIP_DNS1_INVAD);
        $("#priDns" + type).focus().select();
        return null;
    }

    if (checkValid == true && (temp_dnsaddr != "") && (temp_dnsaddr != "0.0.0.0") && ($.ifip(temp_dnsaddr, true))) {
        $.alert(ERR_WAN_DNSADDR_INVAD);
        $("#priDns" + type).focus().select();
        return null;
    }
    if (checkValid == true && (temp_secdnsaddr != "") && (temp_secdnsaddr != "0.0.0.0") && ($.ifip(temp_secdnsaddr, true))) {
        $.alert(ERR_WAN_SECDNS_INVAD);
        $("#secDns" + type).focus().select();
        return null;
    }
    temp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : "0.0.0.0";
    temp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : "0.0.0.0";
    temp_dnsServers = temp_dnsaddr + "," + temp_secdnsaddr;

    var wanArg = {
        enable: 1,
        connectionType: "IP_Routed",
        addressingType: "Static",
        NATEnabled: 1,
        externalIPAddress: $.ip2ip(temp_ip),
        subnetMask: $.ip2ip(temp_mask),
        defaultGateway: (temp_gateway) ? $.ip2ip(temp_gateway) : "0.0.0.0",
        DNSOverrideAllowed: (temp_dnsServers == "0.0.0.0,0.0.0.0") ? 0 : 1,
        DNSServers: temp_dnsServers
    };

    return wanArg;
}

function addAttrsPptpL2tp(type, checkValid) {
    if ($("#usr" + type).val() == "" && checkValid == true) {
        $.alert(ERR_USERNAME_INVAD);
        $("#usr" + type).focus().select();
        return null;
    }
    /*
    if ($("#pwd" + type).val() == "" && checkValid == true) {
        $.alert(ERR_USERNAME_INVAD);
        $("#pwd" + type).focus().select();
        return null;
    }
    */
    var serverIpOrNameTmp = $("#serverIpOrName" + type).val();
    if (serverIpOrNameTmp == "" && checkValid == true) {
        $.alert(ERR_WAN_DA_SERVER_NAME_EMPTY);
        $("#serverIpOrName" + type).focus().select();
        return null;
    }
    var wanArg;
    var dnsModes = $("span.radio-click").parent("label");
    var dnsMode = "";
    $.each(dnsModes, function() {
        if ($(this).attr("for").search(type) != -1) {
            dnsMode = $(this).attr("for");
            return false;
        }
    });

    if (dnsMode == ("dnsModeDyn" + type)) {
        var defaultHostname = $.getDefaultHostname();
        wanArg = {
            enable: 1,
            connectionTypeIP: "IP_Routed",
            addressingType: "DHCP",
            NATEnabled: 1,
            serverIpOrName: serverIpOrNameTmp,
            username: $("#usr" + type).val(),
            password: $("#pwd" + type).val(),
            hostname: defaultHostname
        };
    } else if (dnsMode == ("dnsModeSta" + type)) {
        var temp_ip = $("#ip" + type).val();
        var temp_mask = $("#mask" + type).val();
        var temp_gateway = $("#gw" + type).val();
        if (checkValid == true && $.ifip(temp_ip)) {
            $("#ip" + type).focus().select();
            return null;
        }
        if (checkValid == true && $.mask(temp_mask)) {
            $("#mask" + type).focus().select();
            return null;
        }
        if (checkValid == true && $.ipmask(temp_ip, temp_mask)) {
            $("#mask" + type).focus().select();
            return null;
        }    

        if (checkValid == true && ((temp_gateway == "") || (temp_gateway != "0.0.0.0" && $.ifip(temp_gateway, true)))) {
            $.alert(ERR_IP_FORMAT);
            $("#gw" + type).focus().select();
            return null;
        }

        if (checkValid == true && (temp_gateway == "" || temp_gateway == "0.0.0.0")){
            $.alert(ERR_GATEWAY_INVAD);
            $("#gw" + type).focus().select();
            return null;
        }

        if(!INCLUDE_DEFAULT_GATEWAY_HOST){
            if (checkValid == true &&  (temp_gateway != "") && (temp_gateway != "0.0.0.0") && (!$.isSameLan(temp_gateway, temp_mask, temp_ip, temp_mask))) {
                $.alert(ERR_GATEWAY_INVAD);
                $("#gw" + type).focus().select();
                return null;
            } 
        }

        var temp_dnsaddr = $("#priDns" + type).val();
        var temp_secdnsaddr = $("#secDns" + type).val();
        var temp_dnsServers = "";

        if (checkValid == true && (temp_dnsaddr != "") && (temp_dnsaddr != "0.0.0.0") && ($.ifip(temp_dnsaddr, true))) {
            $.alert(ERR_WAN_DNSADDR_INVAD);
            $("#priDns" + type).focus().select();
            return null;
        }
        if (checkValid == true && (temp_secdnsaddr != "") && (temp_secdnsaddr != "0.0.0.0") && ($.ifip(temp_secdnsaddr, true))) {
            $.alert(ERR_WAN_SECDNS_INVAD);
            $("#secDns" + type).focus().select();
            return null;
        }

        temp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : "0.0.0.0";
        temp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : "0.0.0.0";
        temp_dnsServers = temp_dnsaddr + "," + temp_secdnsaddr;

        if (checkValid == true && $.ifip(serverIpOrNameTmp, true) && temp_dnsaddr == "0.0.0.0" && temp_secdnsaddr == "0.0.0.0") {
            $.alert(ERR_WAN_DA_DNS_EMPTY);
            $("#priDns" + type).focus().select();
            return null;
        }
        wanArg = {
            enable: 1,
            connectionTypeIP: "IP_Routed",
            addressingType: "Static",
            NATEnabled: 1,
            serverIpOrName: serverIpOrNameTmp,
            username: $("#usr" + type).val(),
            password: $("#pwd" + type).val(),
            externalIPAddressIP: $.ip2ip(temp_ip),
            subnetMaskIP: $.ip2ip(temp_mask),
            defaultGatewayIP: $.ip2ip(temp_gateway),
            DNSServersIP: temp_dnsServers
        };
    }
    return wanArg;
}

function addMacCloneAttrs(wanArg) {
    var macAddr;
    if ($("#qsDftMac").prop("checked")) {
        wanArg.MACAddressOverride = 0;
        return true;
    } else if ($("#qsPcMac").prop("checked")) {
        wanArg.MACAddressOverride = 1;
        wanArg.X_TP_ClonedMACAddress = pcMacAddr;
        return true;
    }

    return true;
}

function initMacClone(wanConn) {
    $.act(ACT_CGI, "/cgi/info");
    if ($.exe()) return false;
    pcMacAddr = clientMac;

    if (wanConn.MACAddressOverride == 1) {
        if (wanConn.X_TP_ClonedMACAddress == pcMacAddr) {
            $("#qsPcMac").prop("checked", true);
            $("#qsDftMac").prop("checked", false);
        } else {
            $("#qsPcMac").prop("checked", false);
            $("#qsDftMac").prop("checked", false);
        }
    } else {
        $("#qsPcMac").prop("checked", false);
        $("#qsDftMac").prop("checked", true);
    }
}

function transData(wanArg, wan){
    switch(wan.linkType){
        case "DynamicIp":
            if (typeof wanArg.MACAddressOverride != "undefined"){
                wan.MACAddressOverride = wanArg.MACAddressOverride; 
            }
            if (typeof wanArg.X_TP_ClonedMACAddress != "undefined"){
                wan.X_TP_ClonedMACAddress = wanArg.X_TP_ClonedMACAddress;
            }
            break;
        case "StaticIp":
            wan.ip = wanArg.externalIPAddress;
            wan.mask = wanArg.subnetMask;
            wan.gw = wanArg.defaultGateway;
            var dns = wanArg.DNSServers.split(",");
            wan.dns = dns[0];
            wan.dns2 = dns[1];
            break;
        case "PPPoE":
            wan.usr = wanArg.username;
            wan.pwd = wanArg.password;
            break;
        case "L2tp":
        case "Pptp":
            wan.usr = wanArg.username;
            wan.pwd = wanArg.password;
            wan.addressingType = wanArg.addressingType;
            wan.srvAddrName = wanArg.serverIpOrName;
            if (wanArg.addressingType == "Static"){
                wan.ip = wanArg.externalIPAddressIP;
                wan.mask = wanArg.subnetMaskIP;
                wan.gw = wanArg.defaultGatewayIP;
                var dns = wanArg.DNSServersIP.split(",");
                wan.dns = dns[0];
                wan.dns2 = dns[1];
            }
            break;
        default:
            break;
    }
}

</script>
<div id="quicksetup_eth_container">
    <form class="pure-form pure-form-aligned">
        <div id="div_connType">

            <div id="divDynamicIp" class="nd">
                <p id="t_qsDhcp_title" class="note">
                    If your ISP only allows Internet access to a specific MAC address, you need to Clone that MAC Address to provide access to other devices. If you are not sure, select
                    <strong>Do NOT clone MAC Address</strong>.
                </p>
                <div>
                    <input type="radio" name="macClone" id="qsDftMac" value="disable" />
                    <label id="t_notMacClone">Do NOT clone MAC Address</label>
                </div>
                <div>
                    <input type="radio" name="macClone" id="qsPcMac" value="enable" />
                    <label id="t_doMacClone">Clone Current Computer MAC Address</label>
                </div>
                <p class="note">
                    <span class="note_title" id="t_note_title">Note:</span>
                    <span id="t_qsDhcp_note">If you select Clone MAC Address, please make sure the MAC Address of this computer is registered with your ISP before clicking Next.</span>
                </p>
            </div>

            <div id="divStaticIp" class="nd">
                <p id="t_qsStatic_title" class="note">
                    Please enter your IP information.
                </p>
                <div>
                    <b class="T_ipaddr">IP Address:</b>
                    <input type="text" class="xl" id="ipStaticIp" value="0.0.0.0" />
                </div>
                <div>
                    <b class="T_netmask">Subnet Mask:</b>
                    <input type="text" class="xl" id="maskStaticIp" value="0.0.0.0" />
                </div>
                <div>
                    <b class="T_gateway">Default Gateway:</b>
                    <input type="text" class="xl" id="gwStaticIp" value="0.0.0.0" />
                </div>
                <div>
                    <b class="T_dns">Primary DNS:</b>
                    <input type="text" class="xl" id="priDnsStaticIp" value="0.0.0.0" />
                </div>
                <div>
                    <b class="T_secdns">Secondary DNS:</b>
                    <input type="text" class="xl" id="secDnsStaticIp" value="0.0.0.0" />
                    <span class="T_optional">(optional)</span>
                </div>
            </div>

            <div id="divPPPoE" class="nd">
                <p id="t_qsPppoe_title" class="note">
                    Please enter your PPPoE username and password.
                </p>
                <div>
                    <b class="T_pppusr">Username:</b>
                    <input type="text" class="xl" id="usrPPPoE" maxlength="255" />
                </div>
                <div>
                    <b class="T_ppppwd">Password:</b>
                    <input type="password" class="xl" id="pwdPPPoE" maxlength="255" />
                </div>
            </div>

            <div id="divL2tp" class="nd">
                <p id="t_qsL2tp_title" class="note">
                    Please enter the L2TP uername and password.
                </p>
                <div>
                    <b class="T_username">Username:</b>
                    <input type="text" class="xl" id="usrL2tp" size="15" maxlength="255" />
                </div>
                <div>
                    <b class="T_passwd">Password:</b>
                    <input type="password" class="xl" id="pwdL2tp" size="15" maxlength="255" />
                </div>
                <div>
                    <b></b>
                    <input type="radio" name="dnsModeL2tp" id="dnsModeDynL2tp" checked />
                    <label class="T_dynip">Dynamic IP</label>
                    <input type="radio" name="dnsModeL2tp" id="dnsModeStaL2tp" />
                    <label class="T_staip">Static IP</label>
                </div>
                <div>
                    <b class="T_srvIpName">Server IP Address/Name:</b>
                    <input type="text" class="xl" id="serverIpOrNameL2tp" maxlength="255" />
                </div>
                <div id="dnsModeParamStaL2tp" style="display: none;">
                    <div>
                        <b class="T_ipaddr">IP Address:</b>
                        <input type="text" class="xl" id="ipL2tp" value="0.0.0.0" />
                    </div>
                    <div>
                        <b class="T_netmask">Subnet Mask:</b>
                        <input type="text" class="xl" id="maskL2tp" value="0.0.0.0" />
                    </div>
                    <div>
                        <b class="T_gateway">Default Gateway:</b>
                        <input type="text" class="xl" id="gwL2tp" value="0.0.0.0" />
                    </div>
                    <div>
                        <b class="T_dns">Primary DNS:</b>
                        <input type="text" class="xl" id="priDnsL2tp" value="0.0.0.0" />
                        <span class="T_optional">(optional)</span>
                    </div>
                    <div>
                        <b class="T_secdns">Secondary DNS:</b>
                        <input type="text" class="xl" id="secDnsL2tp" value="0.0.0.0" />
                        <span class="T_optional">(optional)</span>
                    </div>
                </div>
            </div>

            <div id="divPptp" class="nd">
                <p id="t_qsPptp_title" class="note">
                    Please enter the PPTP uername and password.
                </p>
                <div>
                    <b class="T_username">Username:</b>
                    <input type="text" class="xl" id="usrPptp" size="15" maxlength="255" />
                </div>
                <div>
                    <b class="T_passwd">Password:</b>
                    <input type="password" class="xl" id="pwdPptp" size="15" maxlength="255" />
                </div>
                <div>
                    <b></b>
                    <input type="radio" name="dnsModePptp" id="dnsModeDynPptp" checked />
                    <label class="T_dynip">Dynamic IP</label>
                    <input type="radio" name="dnsModePptp" id="dnsModeStaPptp" />
                    <label class="T_staip">Static IP</label>
                </div>
                <div>
                    <b class="T_srvIpName">Server IP Address/Name:</b>
                    <input type="text" class="xl" id="serverIpOrNamePptp" maxlength="255" />
                </div>
                <div id="dnsModeParamStaPptp" style="display: none;">
                    <div>
                        <b class="T_ipaddr">IP Address:</b>
                        <input type="text" class="xl" id="ipPptp" value="0.0.0.0" />
                    </div>
                    <div>
                        <b class="T_netmask">Subnet Mask:</b>
                        <input type="text" class="xl" id="maskPptp" value="0.0.0.0" />
                    </div>
                    <div>
                        <b class="T_gateway">Default Gateway:</b>
                        <input type="text" class="xl" id="gwPptp" value="0.0.0.0" />
                    </div>
                    <div>
                        <b class="T_dns">Primary DNS:</b>
                        <input type="text" class="xl" id="priDnsPptp" value="0.0.0.0" />
                        <span class="T_optional">(optional)</span>
                    </div>
                    <div>
                        <b class="T_secdns">Secondary DNS:</b>
                        <input type="text" class="xl" id="secDnsPptp" value="0.0.0.0" />
                        <span class="T_optional">(optional)</span>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>
<div class="inline-btn-right quicksetup-button-container">
    <div class="inline">
        <button type="submit" class="green T_back" id="back" onclick="goPrev()">Back</button>
    </div>
    <div class="inline">
        <button type="submit" class="green T_next" id="next" onclick="goNext()">Next</button>
    </div>
</div>
<script type="text/javascript" language="javascript">
/* global param */
var wanParam = {};
var ethParam = {};
var pcMacAddr;
var diagStack;

$.tpInit(init);
</script>
