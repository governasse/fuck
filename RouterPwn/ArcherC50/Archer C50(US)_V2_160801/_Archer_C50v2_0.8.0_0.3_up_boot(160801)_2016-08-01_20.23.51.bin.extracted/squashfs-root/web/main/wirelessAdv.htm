<script type="text/javascript">
var wlanObj_2g,
    wlanObj_5g,
    wdsObj_2g,
    wdsObj_5g;

function isHex(str) {
    str = str.toLowerCase();
    for (var i = 0; i < str.length; i++) {
        if ((str.charAt(i) >= '0' && str.charAt(i) <= '9') || (str.charAt(i) >= 'a' && str.charAt(i) <= 'f'))
            continue;
        else {
            $.alert(ERR_WLAN_WDS_HEX_KEY_INVALID);
            return false;
        }
    }
    if (parseInt(str, 16) == 0) {
        $.alert(ERR_WLAN_WDS_HEX_KEY_OUTRANGE);
        return false;
    }
    return true;
}

function checkValue(band) {
    var bInt = $('#beaconInterval' + band);
    var rtsInt = $('#rts' + band);
    var fragTh = $('#frag' + band);
    var dtimTh = $('#dtim' + band);
    var ret;
    if (ret = $.num(bInt.prop('value'), [25, 1000], true)) {
        if (ret == ERR_NUM_INVAD) {
            $.alert(ERR_WLAN_BEACONINTERVAL_INVAD);
        } else if (ret == ERR_NUM_OUTRANGE) {
            $.alert(ERR_WLAN_BEACONINTERVAL_OUTRANGE);
        }
        bInt.focus();
        bInt.select();
        return false;
    }
    if (ret = $.num(rtsInt.prop('value'), [1, 2346], true)) {
        if (ret == ERR_NUM_INVAD) {
            $.alert(ERR_WLAN_RTSINTERVAL_INVAD);
        } else if (ret == ERR_NUM_OUTRANGE) {
            $.alert(ERR_WLAN_RTSINTERVAL_OUTRANGE);
        }
        rtsInt.focus();
        rtsInt.select();
        return false;
    }
    if (ret = $.num(dtimTh.prop('value'), [1, 255], true)) {
        if (ret == ERR_NUM_INVAD) {
            $.alert(ERR_WLAN_DTIMTH_INVAD);
        } else if (ret == ERR_NUM_OUTRANGE) {
            $.alert(ERR_WLAN_DTIMTH_OUTRANGE);
        }
        dtimTh.focus();
        dtimTh.select();
        return false;
    }
    return true;
}

function init(argument) {
    var basicList = $.act(ACT_GL, LAN_WLAN, null, null, ["name", "X_TP_Band", "X_TP_Configuration_Modified", "TransmitPowerSupported", "TransmitPower", "Standard", "X_TP_BeaconInterval", "X_TP_RTSThreshold", "X_TP_FragmentThreshold", "X_TP_DTIMFrequency", "X_TP_ShortGIEnable", "X_TP_IsolateClients", "WMMEnable", "X_TP_GroupKeyUpdateInterval", "SSID", "Channel", "AutoChannelEnable", "SSIDAdvertisementEnabled", "Enable", "X_TP_Bandwidth"]);

    if (!$.exe()) {
        $.each(basicList, function() {
            if ("2.4GHz" == this.X_TP_Band) {
                wlanObj_2g = this;
            } else if (INCLUDE_LAN_WLAN_DUALBAND && "5GHz" == this.X_TP_Band) {
                wlanObj_5g = this;
            }
        });

                wdsObj_2g = $.act(ACT_GET, LAN_WLAN_WDSBRIDGE, wlanObj_2g.__stack, null, ["BridgeEnable", "BridgeAddrMode", "BridgeBSSID", "BridgeSSID", "BridgeAuthMode", "BridgeEncryptMode", "BridgeKey", "BridgeWepKeyIndex"]);
        wdsObj_5g = $.act(ACT_GET, LAN_WLAN_WDSBRIDGE, wlanObj_5g.__stack, null, ["BridgeEnable", "BridgeAddrMode", "BridgeBSSID", "BridgeSSID", "BridgeAuthMode", "BridgeEncryptMode", "BridgeKey", "BridgeWepKeyIndex"]);
    }

    if (!$.exe()) {
        initParam(wlanObj_2g, '_2g');
        initParam(wlanObj_5g, '_5g');
        initWDS(wlanObj_2g, wdsObj_2g, '_2g');
        initWDS(wlanObj_5g, wdsObj_5g, '_5g');
    }

    if ($.mainParam !== undefined) {
        var param = new Object();
        param = $.mainParam;
        $('#scroll').scrollTop(param.scrollTop);
        if (param.band == "_5g") {
            $('#wds_mode').find('span.second-mode').trigger('click');
            $('#wds_mode').find('span').first().removeClass('mode-select').next().addClass('mode-select');
        }

        if (param.wdsExist == 1) {
            $('#wdsSsid' + param.band).prop('value', param.SSID);
            $('#wdsMac' + param.band).prop('value', param.BSSID);

            if ((param.channel != eval('wlanObj' + param.band).channel) || (1 == eval('wlanObj' + param.band).autoChannelEnable)) {
                $.confirm(n_str.wirelessAdv.t_confirm,
                    function() {
                        $.act(ACT_SET, LAN_WLAN, eval('wlanObj' + param.band).__stack, null, ['Channel=' + param.channel, "autoChannelEnable=0"]);
                        $.showCover();
                        $.exe(function(ret) {
                            $.hideCover();
                            if (!ret) {
                                eval('wlanObj' + param.band).channel = param.channel;
                            }
                        });
                    },
                    null, param.channel);
            }
        }

        if (param.wdsEn == 1) {
            $('#wds' + param.band).prop('checked', true);
            $('#wdsInfo' + param.band).show();
        } else {
            $('#wds' + param.band).prop('checked', false);
            $('#wdsInfo' + param.band).hide();
        }
    }
}

function initParam(wlanObj, band) {
    $('#beaconInterval' + band).prop('value', wlanObj.X_TP_BeaconInterval);
    $('#rts' + band).prop('value', wlanObj.X_TP_RTSThreshold);
    $('#frag' + band).prop('value', wlanObj.X_TP_FragmentThreshold);
    $('#dtim' + band).prop('value', wlanObj.X_TP_DTIMFrequency);
    $('#keyUpdate' + band).prop('value', wlanObj.X_TP_GroupKeyUpdateInterval);

    $('#wmm' + band).prop('checked', wlanObj.WMMEnable == 1 ? true : false);
    if ('n' == wlanObj.standard || 'n-only' == wlanObj.standard || 'gn' == wlanObj.standard ||'ac' == wlanObj.standard 
    	|| 'an' == wlanObj.standard || 'nac' == wlanObj.standard || 'ac-only' == wlanObj.standard) {
        $('#wmm' + band).prop('disabled', true);
    }
    $('#gi' + band).prop('checked', wlanObj.X_TP_ShortGIEnable == 1 ? true : false);
    $('#apIso' + band).prop('checked', wlanObj.X_TP_IsolateClients == 1 ? true : false);
}

function initWDS(wlanObj, wdsObj, band) {
    if (wlanObj.enable == 0) {
        $('#wds' + band).prop('disabled', true);
        $('#wds' + band).prop('checked', false);
        $('#wdsInfo' + band).hide();
        $('#wdsSave' + band).prop('disabled', true);
        $.errorTip('wds' + band, ERR_WLAN_DISABLED);
        return;
    }
    if (wdsObj.bridgeEnable == 1) {
        $('#wdsInfo' + band).show();
        $('#wds' + band).prop('checked', true);
        $('#wdsSsid' + band).prop('value', wdsObj.bridgeSSID);
        $('#wdsMac' + band).prop('value', wdsObj.bridgeBSSID);

        if (wdsObj.bridgeAuthMode == "Open" && wdsObj.bridgeEncryptMode == "None") {
            $('#noSec' + band).prop('checked', true);
        } else if (wdsObj.bridgeEncryptMode == "WEPEncryption") {

            $('#wepSec' + band).prop('checked', true);

            if (wdsObj.bridgeAuthMode == "SharedAuthentication") {
                $('#typeSharedKey' + band).prop('checked', true);
            } else if (wdsObj.bridgeAuthMode = "Open") {
                $('#typeOpenSys' + band).prop('checked', true);
            }

            $('#wepKeyValue' + band).prop('value', wdsObj.bridgeKey);

            if (wdsObj.bridgeKey.length == 5 || wdsObj.bridgeKey.length == 13 || wdsObj.bridgeKey.length == 16) {
                $('#keyFormatAscii' + band).prop('checked', true);
            } else if (wdsObj.bridgeKey.length == 10 || wdsObj.bridgeKey.length == 26 || wdsObj.bridgeKey.length == 32) {
                $('#keyFormatHex' + band).prop('checked', true);
            }

            $('#key' + wdsObj.bridgeWepKeyIndex + band).prop('selected', true);
        } else {
            $('#wpaSec' + band).prop('checked', true);

            if (wdsObj.bridgeAuthMode == "PSKAuthentication")
                $('#wpaVersion' + band).prop('checked', true);
            else
                $('#wpa2Version' + band).prop('checked', true);

            if (wdsObj.bridgeEncryptMode == "TKIPEncryption")
                $('#tkipEncryption' + band).prop('checked', true);
            else
                $('#aesEncryption' + band).prop('checked', true);

            $('#passwd' + band).prop('value', wdsObj.bridgeKey)
        }

    } else {
        $('#wds' + band).prop('checked', false);
        $('#wdsInfo' + band).hide();
    }
}


function wlAdvSave(wlanObj, band) {
    var param = {};

    if (checkValue(band) == false) {
        return;
    }

    param.X_TP_BeaconInterval = $('#beaconInterval' + band).prop('value');
    param.X_TP_RTSThreshold = $('#rts' + band).prop('value');
    param.X_TP_FragmentThreshold = $('#frag' + band).prop('value');
    param.X_TP_DTIMFrequency = $('#dtim' + band).prop('value');
    param.X_TP_GroupKeyUpdateInterval = $('#keyUpdate' + band).prop('value');
    param.WMMEnable = $('#wmm' + band).prop('data-checked') ? 1 : 0;
    param.X_TP_ShortGIEnable = $('#gi' + band).prop('data-checked') ? 1 : 0;
    param.X_TP_IsolateClients = $('#apIso' + band).prop('data-checked') ? 1 : 0;

    $.act(ACT_SET, LAN_WLAN, wlanObj.__stack, null, param);

    if (INCLUDE_LAN_WLAN_MSSID) {
        var vapList = $.act(ACT_GS, LAN_WLAN_MSSIDENTRY, null, wlanObj.__stack, ["IsolateClients", "name"]);
        if (INCLUDE_LAN_WLAN_GUESTNETWORK) {
            var guestObj = $.act(ACT_GET, LAN_WLAN_GUESTNET, wlanObj.__stack, null, ["name"]);
        }
        $.exe(function(ret) {
            if (!ret) {
                $.each(vapList, function(arg, index) {
                    if (INCLUDE_LAN_WLAN_GUESTNETWORK && (guestObj.name == this.name)) {;
                    } else {
                        $.act(ACT_SET, LAN_WLAN_MSSIDENTRY, this.__stack, null, ["IsolateClients=" + param.X_TP_IsolateClients]);
                    }
                });
                $.exe(function(ret) {
                    $.removeLoading();
                });
            }
        });
    } else {
        $.exe(function(ret) {
            $.removeLoading();
        });
    }
}

function checkWds(wdsObj, band) {
    var ssidLen = $.realLen($('#wdsSsid' + band).prop('value'));
    if (ssidLen <= 0) {
        $.alert(ERR_WLAN_WDS_SSID_IS_EMPTY);
        $('#wdsSsid' + band).focus().select();
        return false;
    } else if (ssidLen > 32) {
        $.alert(ERR_WLAN_WDS_SSID_LEN_OUTRANGE);
        $('#wdsSsid' + band).focus().select();
        return false;
    }
    var bssid = $("#wdsMac" + band).prop('value');
    if (bssid.length == 0) {
        $.alert(ERR_WLAN_WDS_BSSID_IS_EMPTY);
        $("#wdsMac" + band).focus().select();
        return false;
    } else if ($.mac(bssid, true)) {
        $.alert(ERR_WLAN_WDS_BSSID_INVALID);
        $("#wdsMac" + band).focus().select();
        return false;
    }
    if ($('#wepSec' + band).prop('checked') == true) {
        var wepKey = $('#wepKeyValue' + band).prop('value');
        if ($('#keyFormatAscii' + band).prop('checked') == true) {
            if (wepKey.length != 5 && wepKey.length != 13 && wepKey.length != 16) {
                $.alert(ERR_WLAN_WDS_ASCII_KEY_OUTRANGE);
                return false;
            } else if ($.asc(wepKey, true)) {
                $.alert(ERR_WLAN_WDS_ASCII_KEY_INVALID);
                return false;
            }
        } else if ($('#keyFormatHex' + band).prop('checked') == true) {
            if (wepKey.length != 10 && wepKey.length != 26 && wepKey.length != 32) {
                $.alert(ERR_WLAN_WDS_HEX_KEY_OUTRANGE);
                return false;
            } else if (!isHex(wepKey)) {
                return false;
            }
        }
    } else if ($('#wpaSec' + band).prop('checked') == true) {
        var wpaKey = $('#passwd' + band).prop('value');
        if (wpaKey.length > 64 || wpaKey.length < 8) {
            $.alert(ERR_WLAN_WDS_PSK_OUTRANGE);
            return false;
        } else if (wpaKey.length == 64) {
            if (!isHex(wpaKey)) {
                return false;
            }
        } else {
            if ($.asc(wpaKey, true)) {
                $.alert(ERR_WLAN_WDS_ASCII_KEY_INVALID);
                return false;
            }
        }
    }

    if ($.mainParam != null && $.mainParam.wdsExist == 1 && ($.mainParam.band == band && $.mainParam.channel != eval('wlanObj' + band).channel)) { 
        $.alert(ERR_WLAN_WDS_CHANNEL, $.mainParam.channel);
        return false;
    }

    return true
}

function wdsSave(wdsObj, band) {
    if ($('#wds' + band).prop('data-checked') == true && checkWds(wdsObj, band) == false) {
        return false;
    }
    var wdsEn, authMode, encryptMode, pwd;
    wdsEn = $('#wds' + band).prop('data-checked') ? 1 : 0;
    if ($('#noSec' + band).prop('checked') == true) {
        authMode = 'Open';
        encryptMode = 'None'
        pwd = '';
    } else if ($('#wepSec' + band).prop('checked') == true) {
        encryptMode = 'WEPEncryption';
        if ($('#typeOpenSys' + band).prop('checked') == true)
            authMode = 'Open';
        else if ($('#typeSharedKey' + band).prop('checked') == true)
            authMode = 'SharedAuthentication';
        pwd = $('#wepKeyValue' + band).prop('value');
    } else if ($('#wpaSec' + band).prop('checked') == true) {
        if ($('#wpaVersion' + band).prop('checked') == true) {
            authMode = 'PSKAuthentication';
        } else if ($('#wpa2Version' + band).prop('checked') == true) {
            authMode = 'PSK2Authentication';
        }
        if ($('#tkipEncryption' + band).prop('checked') == true)
            encryptMode = 'TKIPEncryption';
        else if ($('#aesEncryption' + band).prop('checked') == true)
            encryptMode = 'AESEncryption';
        pwd = $('#passwd' + band).prop('value');
    }
    if (wdsEn == 1) {
        $.act(ACT_SET, LAN_WLAN_WDSBRIDGE, wdsObj.__stack, null, ["BridgeEnable=" + wdsEn,
            "BridgeBSSID=" + $('#wdsMac' + band).prop('value'),
            "BridgeSSID=" + $('#wdsSsid' + band).prop('value'),
            "BridgeAuthMode=" + authMode,
            "BridgeEncryptMode=" + encryptMode,
            "BridgeKey=" + pwd,
            "BridgeWepKeyIndex=" + $("#wepShareKey" + band).data('value')
        ]);
    } else {
        $.act(ACT_SET, LAN_WLAN_WDSBRIDGE, wdsObj.__stack, null, ["BridgeEnable=" + wdsEn]);
    }
    $.exe(function() {
        $.removeLoading();
    });
}

function surveyAp(wlanObj, band) {
    $.act(ACT_OP, ACT_OP_WLAN_SCAN, wlanObj.__stack);
    var param = {};
    param.wdsEn = $('#wds' + band).prop('data-checked') ? 1 : 0;
    param.scrollTop = $('#scroll').scrollTop();
    $.exe(function(ret) {
        $.removeLoading();
        if (!ret) {
            if (band == '_2g') {
                $.loadMain("wlScan_2G.htm", param);
            } else {
                $.loadMain("wlScan_5G.htm", param);
            }
        }
    });
}


$('#wds_2g').on('click.wlAdv', function(e) {
    if ($('#wds_2g').prop('data-checked')) {
        $('#wdsInfo_2g').show('fast');
    } else {
        $('#wdsInfo_2g').hide('fast');
    }
});
$('#wds_5g').on('click.wlAdv', function(e) {
    if ($('#wds_5g').prop('data-checked')) {
        $('#wdsInfo_5g').show('fast');
    } else {
        $('#wdsInfo_5g').hide('fast');
    }
});
$('#wlAdvSave_2g').on('click.wlAdv', function(e) {
    $.addLoading($(this));
    wlAdvSave(wlanObj_2g, '_2g');
});
$('#wlAdvSave_5g').on('click.wlAdv', function(e) {
    $.addLoading($(this));
    wlAdvSave(wlanObj_5g, '_5g');
});
$('#noSec_2g').on('click.wlAdv', function(e) {
    $('#hideWpaSec_2g').hide('fast');
    $('#hideWep_2g').hide('fast');
});
$('#noSec_5g').on('click.wlAdv', function(e) {
    $('#hideWpaSec_5g').hide('fast');
    $('#hideWep_5g').hide('fast');
});
$('#wpaSec_2g').on('click.wlAdv', function(e) {
    $('#hideWpaSec_2g').show('fast');
    $('#hideWep_2g').hide('fast');
});
$('#wpaSec_5g').on('click.wlAdv', function(e) {
    $('#hideWpaSec_5g').show('fast');
    $('#hideWep_5g').hide('fast');
});
$('#wepSec_2g').on('click.wlAdv', function(e) {
    $('#hideWpaSec_2g').hide('fast');
    $('#hideWep_2g').show('fast');
});
$('#wepSec_5g').on('click.wlAdv', function(e) {
    $('#hideWpaSec_5g').hide('fast');
    $('#hideWep_5g').show('fast');
});
$('#survey_2g').on('click.wlAdv', function(e) {
    $.addLoading($(this));
    surveyAp(wlanObj_2g, '_2g');
});
$('#survey_5g').on('click.wlAdv', function(e) {
    $.addLoading($(this));
    surveyAp(wlanObj_5g, '_5g');
});
$('#wdsSave_2g').on('click.wlAdv', function() {
	$.addLoading($(this));
    wdsSave(wdsObj_2g, '_2g');
});
$('#wdsSave_5g').on('click.wlAdv', function() {
    $.addLoading($(this));
    wdsSave(wdsObj_5g, '_5g');
});
</script>

<h3 id="et">Advanced Settings</h3>

<div class="content-container">
    <div class="mode-change">
        <span class="mode-select">2.4GHz</span>
        <span>5GHz</span>
    </div>
    <form class="pure-form pure-form-aligned">
        <div class="pure-control-group">
            <b class="xxl" id="t_beacon_2g">Beacon Interval:</b>
            <input type="text" maxlength="4" class="tp-input-text" id="beaconInterval_2g" />
            <span class="textbox-tips">(25-1000)</span>
        </div>
        <div class="pure-control-group">
            <b class="xxl" id="t_rts_2g">RTS Threshold:</b>
            <input type="text" maxlength="4" class="tp-input-text" id="rts_2g" />
            <span class="textbox-tips">(1-2346)</span>
        </div>
        <div class="pure-control-group nd">
            <b class="xxl" id="t_frag_2g">Fragmentation Threshold:</b>
            <input type="text" maxlength="4" class="tp-input-text" id="frag_2g" />
            <span class="textbox-tips">(256-2346)</span>
        </div>
        <div class="pure-control-group">
            <b class="xxl" id="t_dtim_2g">DTIM Interval:</b>
            <input type="text" maxlength="4" class="tp-input-text" id="dtim_2g" />
            <span class="textbox-tips">(1-255)</span>
        </div>
        <div class="pure-control-group">
            <b class="xxl" id="t_time_2g">Group Key Update Period:</b>
            <input type="text" maxlength="4" class="tp-input-text" id="keyUpdate_2g" />
            <span class="textbox-tips T_seconds">seconds</span>
        </div>
        <div class="part-separate">
            <b class="xxl" id="t_wmm_2g">WMM Feature:</b>
            <input type="checkbox" id="wmm_2g" />
            <label id="t_enwmm_2g">Enable WMM</label>
        </div>
        <div>
            <b class="xxl" id="t_sgi_2g">Short GI Feature:</b>
            <input type="checkbox" id="gi_2g" />
            <label id="t_ensgi_2g">Enable Short GI</label>
        </div>
        <div>
            <b class="xxl" id="t_iso_2g">AP Isolation Feature:</b>
            <input type="checkbox" id="apIso_2g" />
            <label id="t_eniso_2g">Enable AP Isolation</label>
        </div>
        <button type="submit" class="green T_save" id="wlAdvSave_2g">Save</button>
    </form>
    <form class="pure-form pure-form-aligned">
        <div class="pure-control-group">
            <b class="xxl" id="t_beacon_5g">Beacon Interval:</b>
            <input type="text" maxlength="4" class="tp-input-text" id="beaconInterval_5g" />
            <span class="textbox-tips">(25-1000)</span>
        </div>
        <div class="pure-control-group">
            <b class="xxl" id="t_rts_5g">RTS Threshold:</b>
            <input type="text" maxlength="4" class="tp-input-text" id="rts_5g" />
            <span class="textbox-tips">(1-2346)</span>
        </div>
        <div class="pure-control-group nd">
            <b class="xxl" id="t_frag_5g">Fragmentation Threshold:</b>
            <input type="text" maxlength="4" class="tp-input-text" id="frag_5g" />
            <span class="textbox-tips">(256-2346)</span>
        </div>
        <div class="pure-control-group">
            <b class="xxl" id="t_dtim_5g">DTIM Interval:</b>
            <input type="text" maxlength="4" class="tp-input-text" id="dtim_5g" />
            <span class="textbox-tips">(1-255)</span>
        </div>
        <div class="pure-control-group">
            <b class="xxl" id="t_time_5g">Group Key Update Period:</b>
            <input type="text" maxlength="4" class="tp-input-text" id="keyUpdate_5g" />
            <span class="textbox-tips T_seconds">seconds</span>
        </div>
        <div class="part-separate">
            <b class="xxl" id="t_wmm_5g">WMM Feature:</b>
            <input type="checkbox" id="wmm_5g" />
            <label id="t_enwmm_5g">Enable WMM</label>
        </div>
        <div>
            <b class="xxl" id="t_sgi_5g">Short GI Feature:</b>
            <input type="checkbox" id="gi_5g" />
            <label id="t_ensgi_5g">Enable Short GI</label>
        </div>
        <div>
            <b class="xxl" id="t_iso_5g">AP Isolation Feature:</b>
            <input type="checkbox" id="apIso_5g" />
            <label id="t_eniso_5g">Enable AP Isolation</label>
        </div>
        <button type="submit" class="green T_save" id="wlAdvSave_5g">Save</button>
    </form>
</div>

<h3>WDS</h3>

<div class="content-container">
    <div id="wds_mode" class="mode-change">
        <span class="mode-select">2.4GHz</span>
        <span>5GHz</span>
    </div>
    <form class="pure-form pure-form-aligned">
        <div>
            <b id="t_wds_2g">WDS Bridging:</b>
            <input type="checkbox" id="wds_2g" />
            <label id="t_enwds_2g">Enable WDS Bridging</label>
        </div>
        <div id="wdsInfo_2g">
            <div class="pure-control-group inline">
                <b class="T_wlname">Name(SSID):</b>
                <input type="text" maxlength="32" class="tp-input-text" id="wdsSsid_2g" />
            </div>
            <button type="submit" class="blue inline T_survey" id="survey_2g">Survey</button>
            <div class="pure-control-group">
                <b id="t_mac_2g">MAC Address(to be bridged):</b>
                <input type="text" maxlength="17" class="tp-input-text" id="wdsMac_2g" />
            </div>
            <div>
                <b class="T_wlsec">Security:</b>
                <input type="radio" name="security_2g" id="noSec_2g" checked="checked" />
                <label class="T_wldissec">No Security</label>
                <input type="radio" name="security_2g" id="wpaSec_2g" />
                <label class="T_wlsecpersonal">WPA/WPA2 Personal</label>
                <input type="radio" name="security_2g" id="wepSec_2g" />
                <label>WEP</label>
            </div>
            <div id="hideWpaSec_2g" class="nd">
                <div>
                    <b class="T_version">Version:</b>
                    <input type="radio" name="version_2g" id="wpaVersion_2g" />
                    <label>WPA-PSK</label>
                    <input type="radio" name="version_2g" id="wpa2Version_2g" checked="checked" />
                    <label>WPA2-PSK</label>
                </div>

                <div>
                    <b class="T_encryption">Encryption:</b>
                    <input type="radio" name="encryption_2g" id="tkipEncryption_2g" />
                    <label>TKIP</label>
                    <input type="radio" name="encryption_2g" id="aesEncryption_2g" checked="checked" />
                    <label>AES</label>
                </div>
                <div class="pure-control-group">
                    <label class="label_title"><b class="T_wlpwd">Wireless Password:</b>
                    </label>
                    <input type="text" class="tp-input-text" id="passwd_2g" />
                </div>
            </div>
            <div id="hideWep_2g" class="">
                <div>
                    <b class="T_type">Type:</b>
                    <input type="radio" name="wepType_2g" id="typeOpenSys_2g" checked="checked" />
                    <label class="T_opensys">Open System</label>
                    <input type="radio" name="wepType_2g" id="typeSharedKey_2g" />
                    <label class="T_sharekey">Shared Key</label>
                </div>
                <div>
                    <b class="T_weptype">Key Format:</b>
                    <input type="radio" name="keyFormat_2g" id="keyFormatAscii_2g" checked="checked" />
                    <label>ASCII</label>
                    <input type="radio" name="keyFormat_2g" id="keyFormatHex_2g" />
                    <label class="T_hex">Hexadecimal</label>
                </div>
                <b class="T_wepkeyindex">Key Index:</b>
                <select id="wepShareKey_2g" class="xl">
                    <option value="1" id="key1_2g">Key 1</option>
                    <option value="2" id="key2_2g">Key 2</option>
                    <option value="3" id="key3_2g">key 3</option>
                    <option value="4" id="key4_2g">Key 4</option>
                </select>
                <div>
                    <b class="T_keyvalue">Key Value:</b>
                    <input type="text" class="tp-input-text xl" name="wepKeyValue_2g" id="wepKeyValue_2g" />
                </div>
            </div>
        </div>
        <button type="submit" class="green T_save" id="wdsSave_2g">Save</button>
    </form>
    <form class="pure-form pure-form-aligned">
        <div>
            <b id="t_wds_5g">WDS Bridging:</b>
            <input type="checkbox" id="wds_5g" />
            <label id="t_enwds_5g">Enable WDS Bridging</label>
        </div>
        <div id="wdsInfo_5g">
            <div class="pure-control-group inline">
                <b class="T_wlname">Name(SSID):</b>
                <input type="text" maxlength="32" class="tp-input-text" id="wdsSsid_5g" />
            </div>
            <button type="submit" class="blue inline T_survey" id="survey_5g">Survey</button>
            <div class="pure-control-group">
                <b id="t_mac_5g">MAC Address(to be bridged):</b>
                <input type="text" maxlength="17" class="tp-input-text" id="wdsMac_5g" />
            </div>
            <div>
                <b class="T_wlsec">Security:</b>
                <input type="radio" name="security_5g" id="noSec_5g" checked="checked" />
                <label class="T_wldissec">No Security</label>
                <input type="radio" name="security_5g" id="wpaSec_5g" />
                <label class="T_wlsecpersonal">WPA/WPA2 Personal</label>
                <input type="radio" name="security_5g" id="wepSec_5g" />
                <label>WEP</label>
            </div>
            <div id="hideWpaSec_5g" class="nd">
                <div>
                    <b class="T_version">Version:</b>
                    <input type="radio" name="version_5g" id="wpaVersion_5g" />
                    <label>WPA-PSK</label>
                    <input type="radio" name="version_5g" id="wpa2Version_5g" checked="checked" />
                    <label>WPA2-PSK</label>
                </div>

                <div>
                    <b class="T_encryption">Encryption:</b>
                    <input type="radio" name="encryption_5g" id="tkipEncryption_5g" />
                    <label>TKIP</label>
                    <input type="radio" name="encryption_5g" id="aesEncryption_5g" checked="checked" />
                    <label>AES</label>
                </div>
                <div class="pure-control-group">
                    <label class="label_title"><b class="T_wlpwd">Wireless Password:</b>
                    </label>
                    <input type="text" class="tp-input-text" id="passwd_5g" />
                </div>
            </div>
            <div id="hideWep_5g" class="">
                <div>
                    <b class="T_type">Type:</b>
                    <input type="radio" name="wepType_5g" id="typeOpenSys_5g" checked="checked" />
                    <label class="T_opensys">Open System</label>
                    <input type="radio" name="wepType_5g" id="typeSharedKey_5g" />
                    <label class="T_sharekey">Shared Key</label>
                </div>
                <div>
                    <b class="T_weptype">Key Format:</b>
                    <input type="radio" name="keyFormat_5g" id="keyFormatAscii_5g" checked="checked" />
                    <label>ASCII</label>
                    <input type="radio" name="keyFormat_5g" id="keyFormatHex_5g" />
                    <label class="T_hex">Hexadecimal</label>
                </div>
                <b class="T_wepkeyindex">Key Index:</b>
                <select id="wepShareKey_5g" class="xl">
                    <option value="1" id="key1_5g">Key 1</option>
                    <option value="2" id="key2_5g">Key 2</option>
                    <option value="3" id="key3_5g">key 3</option>
                    <option value="4" id="key4_5g">Key 4</option>
                </select>
                <div>
                    <b class="T_keyvalue">Key Value:</b>
                    <input type="text" class="tp-input-text xl" name="wepKeyValue_5g" id="wepKeyValue_5g" />
                </div>
            </div>
        </div>
        <button type="submit" class="green T_save" id="wdsSave_5g">Save</button>
    </form>
</div>

<script type="text/javascript">
$.tpInit(init);
</script>
